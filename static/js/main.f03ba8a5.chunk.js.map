{"version":3,"sources":["enum/ThemeEnum.ts","util/getTheme.ts","assets/icon/userBtn.svg","store/theme.ts","styles/ThemePalette.ts","hooks/Theme/useTheme.ts","styles/globalStyle.ts","styles/ColorPalette.ts","styles/FontPalette.ts","components/Welcome/Welcome.style.ts","assets/Image/RyanGIF.gif","components/Common/Button/Button.style.ts","components/Common/Button/Button.tsx","hooks/Common/useLink.ts","hooks/Welcome/useWelcome.ts","components/Welcome/Welcome.tsx","pages/WelcomePage.tsx","components/Common/Base/Footer/Footer.style.ts","assets/icon/password.svg","assets/icon/home.svg","hooks/Common/usePathParam.ts","components/Common/Base/Footer/Footer.tsx","lib/Cookie/index.ts","lib/Token/index.ts","lib/api/token/token.api.ts","lib/Axios/refreshToken.ts","lib/Axios/index.ts","lib/api/user/user.api.ts","enum/registerEnum.ts","lib/Toast/index.ts","store/user.ts","hooks/Header/useHeader.ts","components/Common/Base/Header/Header.style.ts","components/Common/Base/Header/Header.tsx","components/Common/Base/PageTemplate/PageTemplate.style.ts","components/Common/Base/PageTemplate/PageTemplate.tsx","components/Register/Register.style.ts","components/Common/Input/InfoInput/InfoInput.style.ts","components/Common/Input/InfoInput/InfoInput.tsx","components/Common/Form/Form.style.ts","components/Common/Form/Form.tsx","util/makeBirth.ts","util/removeHyphen.ts","lib/api/auth/auth.api.ts","util/makePhoneNumber.ts","validation/register.validation.ts","enum/loginEnum.ts","store/register.ts","hooks/Register/useRegister.ts","components/Register/TermModal/TermModal.style.ts","components/Register/TermModal/TermModal.tsx","components/Register/Term/Term.style.ts","components/Register/Term/Term.tsx","components/Register/Register.tsx","pages/RegisterPage.tsx","store/login.ts","hooks/Login/useLogin.ts","hooks/Common/useAuthInput.ts","components/Common/Input/AuthInput/AuthInput.style.ts","components/Common/Input/AuthInput/AuthInput.tsx","components/Common/AuthForm/AuthForm.style.ts","components/Common/AuthForm/AuthForm.tsx","components/Login/Login.style.ts","components/Login/Login.tsx","components/Login/Card/Card.style.ts","components/Login/Card/Card.tsx","pages/LoginPage.tsx","util/makeMoneyComma.ts","components/Main/Card/Card.style.ts","components/Main/Card/Card.tsx","lib/api/account/account.api.ts","store/account.ts","hooks/Main/useMain.ts","util/getCompany.ts","util/makeAccountNumber.ts","components/Main/AddCard/AddCard.style.ts","components/Main/AddCard/AddCard.tsx","components/Main/Main.style.ts","components/Main/Main.tsx","pages/MainPage.tsx","hooks/Password/usePassword.ts","components/Password/Password.style.ts","components/Password/Password.tsx","pages/PasswordPage.tsx","components/DetailCard/CardHistory/CardHistory.style.ts","util/makeDate.ts","components/DetailCard/CardHistory/CardHistory.tsx","hooks/Common/useQueryString.ts","hooks/DetailCard/useDetailCard.ts","components/DetailCard/DetailCard.style.ts","components/DetailCard/DetailCard.tsx","pages/DetailCardPage.tsx","components/Profile/Profile.style.ts","components/Profile/Profile.tsx","pages/ProfilePage.tsx","components/Notfound/Notfound.style.ts","components/Notfound/Notfound.tsx","pages/NotfoundPage.tsx","components/AddAccountGetInfo/AddAccountGetInfo.style.ts","store/addAccount.ts","validation/addAccount.validation.ts","assets/icon/check.svg","hooks/AddAccount/useAddAccount.ts","components/AddAccountGetInfo/AddAccountGetInfo.tsx","pages/AddAccountGetInfoPage.tsx","components/AddAccountSetCard/AddAccountSetCard.style.ts","components/Common/Card/Card.style.ts","components/Common/Card/Card.tsx","components/AddAccountSetCard/AddAccountSetCard.tsx","pages/AddAccountSetCardPage.tsx","components/EstablishAccountPassword/EstablishAccountPassword.style.ts","store/establishAccount.ts","hooks/EstablishAccount/useEstablishAccount.ts","components/EstablishAccountPassword/EstablishAccountPassword.tsx","pages/EstablishAccountPasswordPage.tsx","components/EstablishAccountComplete/EstablishAccountComplete.style.ts","components/EstablishAccountComplete/EstablishAccountComplete.tsx","pages/EstablishAccountCompletePage.tsx","components/GetAccountInfo/Card/Card.style.ts","components/GetAccountInfo/Card/Card.tsx","components/GetAccountInfo/GetAccountInfo.style.ts","store/getAccountInfo.ts","hooks/GetAccountInfo/useGetAccountInfo.ts","components/GetAccountInfo/GetAccountInfo.tsx","pages/RemittanceGetCardPage.tsx","components/RemittanceSetCard/RemittanceSetCard.style.ts","hooks/Remittance/useRemittance.ts","components/Common/AccountForm/AccountForm.style.ts","components/Common/AccountForm/AccountForm.tsx","components/Common/Modal/Portal.ts","components/Common/Modal/Modal.style.ts","components/Common/Modal/Modal.tsx","components/RemittanceSetCard/RemittanceSetCard.tsx","pages/RemittanceSetCardPage.tsx","hooks/ConfirmInfo/useConfirmInfo.ts","components/ConfirmInfo/ConfirmInfo.style.ts","components/ConfirmInfo/ConfirmInfo.tsx","hooks/Remittance/useRemittanceConfirm.ts","pages/RemittanceConfirmPage.tsx","hooks/GetPassword/useGetPassword.ts","components/GetPassword/GetPassword.style.ts","components/GetPassword/GetPassword.tsx","hooks/Remittance/useRemittancePassword.ts","pages/RemittanceGetPasswordPage.tsx","components/Complete/Complete.style.ts","hooks/Complete/useComplete.ts","components/Complete/Complete.tsx","hooks/Remittance/useRemittanceComplete.ts","pages/RemittanceCompletePage.tsx","pages/BringGetCardPage.tsx","components/BringMoney/BringMoney.style.ts","hooks/Bring/useBring.ts","components/BringMoney/BringMoney.tsx","pages/BringMoneyPage.tsx","pages/BringGetPasswordPage.tsx","pages/BringCompletePage.tsx","components/Common/CustomRoute/CustomRoute.tsx","components/Routes.tsx","ThemeProviderContainer.tsx","index.tsx"],"names":["ThemeEnum","_path","_path2","LIGHT","DARK","getTheme","Number","localStorage","getItem","themeMode","atom","key","default","lightTheme","backgroundColor","fontColor","darkTheme","useTheme","useRecoilState","currentTheme","setCurrentTheme","handleChangeTheme","useCallback","setItem","theme","GlobalStyle","css","ColorPalette","fontPalette","StyledTopBackground","styled","div","StyledTopHeader","StyledTitle","StyledStartNow","StyledButton","button","props","Button","children","handleClick","customStyle","style","onClick","useLink","url","history","useHistory","handleLink","push","useWelcome","pushLogin","pushRegister","customButtonStyle","useMemo","marginBottom","Welcome","className","src","RyanGIF","alt","WelcomePage","StyledFooter","_excluded","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgUserBtn","_ref","svgRef","title","titleId","width","height","viewBox","fill","xmlns","ref","id","d","ForwardRef","SvgPassword","fillRule","clipRule","_g","_defs","SvgHome","clipPath","transform","usePathParams","useLocation","pathname","Footer","pathParam","pushMain","pushProfile","pushPassword","cursor","FooterButton","Cookie","getCookie","cookies","get","setCookie","value","set","removeCookie","remove","Token","type","sessionStorage","accessToken","jwt","decode","token","getRefreshToken","a","axios","post","SERVER","data","refreshToken","config","getToken","decodeToken","nowDate","Date","now","exp","response","setToken","headers","customAxios","create","baseURL","Authorization","interceptors","request","use","ERegisterError","handleGetMyInfo","showToast","message","toast","success","position","POSITION","TOP_RIGHT","error","info","Toast","userInfoState","useHeader","setUserInfo","useSetRecoilState","customButtonyStyle","fontSize","fontFamily","fontWeight","boxShadow","logout","removeItem","window","location","reload","getMyInfo","errorToast","checkToken","loadMyInfo","StyleHeader","Header","isLogout","isLoadInfo","path","pushPath","useEffect","StyledPageTemplate","StyledPageTemplateContent","PageTemplate","isHeader","isFooter","StyledInfoInput","input","InfoInput","name","onChange","placeholder","maxLength","StyledForm","Form","customInputStyle","customTitleInputStyle","makeBirth","birth","replace","removeHyphen","split","filter","v","join","handleRegister","registerDto","handleEasyRegister","handleLogin","loginDto","handleEasyLogin","makePhoneNumber","phoneNumber","registerValidation","checkEmptyState","obj","check","entries","undefined","checkErrorState","ELoginEnum","registerAtom","pw","rePw","phone","registerErrorAtom","useRegister","registerState","setRegisterState","errorState","setErrorState","useState","checkTerm","setCheckTerm","resetRegisterState","useResetRecoilState","resetErrorState","onChangeErrorState","onCheckRePW","onCheckPhone","onCheckBirth","onCheckDefault","register","resetAllState","onClickRegister","onChangeRegisterState","e","StyledTermModal","show","StyledTermModalWrapper","StyledTermModalContent","TermModal","onClickOutside","outSideRef","document","addEventListener","removeEventListener","StyleTerm","StyleTermButton","StyleTermLink","Term","modalEl","useRef","click","setClick","prev","current","contains","Register","RegisterPage","idState","pwState","easyPwState","idErrorState","pwErrorState","easyPwErrorState","useLogin","isEasyLogin","setIsEasyLogin","setId","setPw","easyPw","setEasyPw","idError","setIdError","pwError","setPwError","easyPwError","setEasyPwError","resetIdState","resetPwState","resetEasyPwState","resetIdErrorState","resetPwErrorState","resetEasyPwErrorState","checkIdErrorState","checkPwErrorState","checkEasyPwErrorState","login","req","setLoginToken","user","easyLogin","easyLoginId","onChangeIdState","onChangePwState","onChnageEasyPwState","res","onChangeEasyLogin","onClickLoginBtn","infoToast","useAuthInput","Reg","inputsRef","sendResult","map","handleOnChange","match","nextElementSibling","focus","handleOnPaste","clipboardData","getData","charAt","preventDefault","handleOnFocus","select","handleOnKeyDown","previousElementSibling","StyledAuthInput","StyleAuthContainer","AuthInput","RegExp","customContainerStyle","password","inputs","onKeyDown","onFocus","onPaste","el","AuthForm","customErrorStyle","customTitleStyle","StyledLoginForm","Login","StyledCard","Card","LoginPage","makeMoneyComma","money","toString","company","number","pushDetailCard","handleEstablishAccount","establishAccountDto","handleGetMyAccount","handleGetAccountInfo","handleGetPushRecord","pushRecordDto","handleGetReceiveRecord","handleRemittance","remittanceDto","handleGetMyAllAccount","handleSetMyAccount","accountIdDto","myCardState","detailCardInfoState","userPhone","accountId","detailCardOptionState","detailCardRecordState","myAccountIdState","useMain","userInfo","useRecoilValue","myCard","setMyCard","setAccountId","pushAddCard","pushEstablish","pushRemittance","color","darkThemeButtonStyle","getMyAccount","setMyAccountId","accounts","accountArray","forEach","account","resetStorage","onClickAddCard","onClickRemittance","onClickEstablish","getCompany","substring","makeAccountNumber","StyledAddCard","AddCard","StyledMainTitle","Main","card","MainPage","usePassword","setPassword","passwordError","setPasswordError","checkPasswordError","easyRegister","setEasyToken","successToast","marginTop","onChangePassword","onClickNext","Password","PasswordPage","StyledCardHistory","StyledMoney","StyledInfo","StyledHistoryOption","StyledCardHistoryWrapper","makeDate","date","head","tail","CardHistory","useQueryString","search","queryString","parse","useDetailCard","pushBring","record","setRecord","option","setOption","setCard","customBringButtonStyle","zIndex","getAccountInfo","getPushRemittanceRecord","getReceiveRemittanceRecord","handleRecord","receive","recordArr","reciverId","createdAt","senderId","loadRecord","setRecordNewest","sort","b","setRecordOldest","onClickBring","onClickOption","StyledTopWrapper","DetailCard","text","DetailCardPage","StyledContentWrap","StyledContent","Profile","ProfilePage","Notfound","NotfoundPage","phoneState","setCardState","selectCardState","addAccountValidation","checkEmpty","_circle","useAddAccount","pushNext","setPhone","phoneError","setPhoneError","selectCard","setSelectCard","getMyAllAccount","getUnDuplicatedAccountId","unDuplicatedAccountId","myAccount","includes","checkPhone","onClickSetCard","postAccount","then","ac","accountName","onChangePhone","onClickFind","checkGetInfo","checkSetCard","setCardCheck","onResetPhone","AddAccountGetInfo","AddAccountGetInfoPage","SvgCheck","cx","cy","r","setCheck","AddAccountSetCard","AddAccountSetCardPage","StyledAccountNameTitle","accountPasswordState","establishAccountInfoState","accountNameState","useEstablishAccount","confetti","setAccountName","accountInfo","setAccountInfo","resetAccountInfo","resetPassword","popEmoji","addConfetti","emojis","emojiSize","confettiNumber","establishAccount","checkPasswordStorage","checkCompleteStorage","onClickComplete","EstablishAccountPassword","console","log","textAlign","EstablishAccountPasswordPage","EstablishAccountComplete","JSConfetti","EstablishAccountCompletePage","cardState","useGetAccountInfo","setMoney","cardList","setCardList","resetCard","onClickCard","parseInt","checkStorage","GetAccountInfo","c","RemittanceGetCardPage","useRemittance","setAccount","accountError","setAccountError","moneyError","setMoneyError","openModal","setOpenModal","balance","setBalance","modalInfo","setModalInfo","padding","checkAccountError","checkMoneyError","getReceiveAccountInfo","onClickModalYes","onChangeAccountNumber","onChangeMoney","StyledKorean","StlyedError","AccountForm","numToKorean","FormatOptions","LINGUAL","ModalPortal","getElementById","reactDom","createPortal","StyledModal","StyledBackground","Modal","content","handleNo","handleYes","RemittanceSetCard","RemittanceSetCardPage","useConfirmInfo","onClickNo","StyledWrapper","ConfirmInfo","commission","give","useRemittanceConfirm","onClickConfirmYes","RemittanceConfirmPage","useGetPassword","GetPassword","useRemittancePassword","remittance","sendAccountId","sendAccountPw","receiveAccountId","RemittanceGetPasswordPage","useComplete","Complete","Props","bringMoney","bringAccount","remittanceCommission","remittanceGiveAccount","remittanceMoney","remittanceReceiveAccount","useRemittanceComplete","RemittanceCompletePage","BringGetCardPage","useBring","pushComplete","onClickNextAuth","BringMoney","BringMoneyPage","BringGetPasswordPage","BringCompletePage","CustomRoute","component","exact","Routes","Pages","to","ThemeProviderContainer","autoClose","limit","styles","ReactDOM","render"],"mappings":"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","file":"static/js/main.f03ba8a5.chunk.js","sourcesContent":["export enum ThemeEnum {\r\n  LIGHT = 0,\r\n  DARK = 1,\r\n}","import { ThemeEnum } from 'enum/ThemeEnum';\r\n\r\nconst { LIGHT, DARK } = ThemeEnum;\r\n\r\nconst getTheme = (): ThemeEnum => {\r\n  const theme: ThemeEnum = Number(localStorage.getItem('theme'));\r\n\r\n  if (theme === DARK) {\r\n    return DARK;\r\n  }\r\n\r\n  return LIGHT;\r\n};\r\n\r\nexport default getTheme;\r\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUserBtn(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 27,\n    height: 30,\n    viewBox: \"0 0 27 30\",\n    fill: \"#C4C4C4\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.3 0C9.82618 0 7 2.82618 7 6.3C7 9.77382 9.82618 12.6 13.3 12.6C16.7738 12.6 19.6 9.77382 19.6 6.3C19.6 2.82618 16.7738 0 13.3 0Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.0348 20.4113C20.8683 18.2115 17.9962 17 14.9475 17H11.4305C8.38187 17 5.50971 18.2115 3.3432 20.4113C1.1873 22.6003 0 25.4898 0 28.5477C0 29.0333 0.393677 29.427 0.879266 29.427H25.4987C25.9843 29.427 26.378 29.0333 26.378 28.5477C26.378 25.4898 25.1907 22.6003 23.0348 20.4113Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUserBtn);\nexport default __webpack_public_path__ + \"static/media/userBtn.f95c4afb.svg\";\nexport { ForwardRef as ReactComponent };","import { ThemeEnum } from 'enum/ThemeEnum';\r\nimport { atom } from 'recoil';\r\nimport getTheme from 'util/getTheme';\r\n\r\nexport const themeMode = atom<ThemeEnum>({\r\n  key: 'themeMode',\r\n  default: getTheme(),\r\n});\r\n","import { ITheme } from 'types/theme/theme.type';\r\n\r\nexport const lightTheme: ITheme = {\r\n  backgroundColor: '#ffffff',\r\n  fontColor: '#000000',\r\n};\r\n\r\nexport const darkTheme: ITheme = {\r\n  backgroundColor: '#2D333B',\r\n  fontColor: '#ffffff',\r\n};\r\n","import { ThemeEnum } from 'enum/ThemeEnum';\r\nimport { useCallback } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { themeMode } from 'store/theme';\r\nimport { darkTheme, lightTheme } from 'styles/ThemePalette';\r\nimport { ITheme } from 'types/theme/theme.type';\r\nimport getTheme from 'util/getTheme';\r\n\r\nconst useTheme = () => {\r\n  const [currentTheme, setCurrentTheme] = useRecoilState<ThemeEnum>(themeMode);\r\n  const { LIGHT, DARK } = ThemeEnum;\r\n\r\n  const handleChangeTheme = useCallback((): void => {\r\n    if (currentTheme === DARK) {\r\n      localStorage.setItem('theme', '0');\r\n      setCurrentTheme(LIGHT);\r\n      return;\r\n    }\r\n\r\n    localStorage.setItem('theme', '1');\r\n    setCurrentTheme(DARK);\r\n  }, [DARK, LIGHT, setCurrentTheme, currentTheme]);\r\n\r\n  const theme: ITheme = getTheme() ? darkTheme : lightTheme;\r\n\r\n  return {\r\n    theme,\r\n    currentTheme,\r\n    handleChangeTheme,\r\n  };\r\n};\r\n\r\nexport default useTheme;\r\n","import { css } from '@emotion/react';\r\nimport useTheme from 'hooks/Theme/useTheme';\r\n\r\nconst GlobalStyle = () => {\r\n  const { theme } = useTheme();\r\n  const styles = css`\r\n    * {\r\n      padding: 0;\r\n      margin: 0;\r\n      box-sizing: border-box;\r\n    }\r\n\r\n    body {\r\n      background-color: ${theme.backgroundColor};\r\n    }\r\n\r\n    a {\r\n      text-decoration: none;\r\n      outline: none;\r\n    }\r\n\r\n    a:hover,\r\n    a:active,\r\n    :visited,\r\n    :link {\r\n      text-decoration: none;\r\n    }\r\n\r\n    ol,\r\n    ul {\r\n      list-style: none;\r\n    }\r\n\r\n    input {\r\n      outline: none;\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n    }\r\n  `;\r\n  return styles;\r\n};\r\n\r\nexport default GlobalStyle;\r\n","import { IColorPalette } from 'types/theme/theme.type';\r\n\r\nexport const ColorPalette: IColorPalette = {\r\n  main: '#FFDC00',\r\n  toss: '#004AE2',\r\n  shinhan: '#0078B3',\r\n  darkBlue: '#111962',\r\n  skyBlue: '#4385CF',\r\n  skyPink: ' #FFB3BF',\r\n  skyGreen: '#74959A',\r\n  grey: '#E5E5E5',\r\n  darkGrey: '#C4C4C4',\r\n  backgroundWhite: '#F2F2F2',\r\n  fureGreen: '#0C7E57',\r\n  fureWhite: '#FFFFFF',\r\n  fureBlack: '#000000',\r\n  highlightRed: '#FF5442',\r\n};\r\n","import { IFontPalette } from 'types/theme/theme.type';\r\n\r\nexport const fontPalette: IFontPalette = {\r\n  font14: '0.875rem',\r\n  font16: '1rem',\r\n  font18: '1.125rem',\r\n  font20: '1.25rem',\r\n  font22: '1.375rem',\r\n  font24: '1.5rem',\r\n  font28: '1.7rem',\r\n  font30: '1.875rem',\r\n  font36: '2.25rem',\r\n  font40: '2.5rem',\r\n  font48: '3rem',\r\n  font60: '3.75rem',\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledWelcome = styled.div``;\r\n\r\nexport const StyledTopBackground = styled.div`\r\n  width: 100%;\r\n  height: 582px;\r\n  background-color: ${ColorPalette.main};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 60px;\r\n`;\r\n\r\nexport const StyledTopHeader = styled.div`\r\n  width: 100vw;\r\n  height: 72px;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  align-items: center;\r\n  .title {\r\n    width: 430px;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: center;\r\n    text-align: center;\r\n    .mainTitle {\r\n      z-index: 9;\r\n      font-family: 'AppleEB';\r\n      font-size: ${fontPalette.font20};\r\n      color: ${ColorPalette.darkBlue};\r\n    }\r\n    .subTitle {\r\n      z-index: 9;\r\n      font-family: 'AppleEB';\r\n      font-size: ${fontPalette.font14};\r\n      font-weight: bold;\r\n      color: ${ColorPalette.darkBlue};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledTitle = styled.div`\r\n  z-index: 9;\r\n  font-family: 'AppleEB';\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  width: 430px;\r\n  height: fit-content;\r\n  .subTitle {\r\n    color: ${ColorPalette.darkBlue};\r\n    z-index: 9;\r\n    font-size: ${fontPalette.font40};\r\n    font-weight: bold;\r\n  }\r\n  .mainTitle {\r\n    z-index: 9;\r\n    color: ${ColorPalette.darkBlue};\r\n    font-size: ${fontPalette.font60};\r\n    font-weight: bold;\r\n    line-height: 60px;\r\n  }\r\n`;\r\n\r\nexport const StyledStartNow = styled.div`\r\n  font-size: ${fontPalette.font48};\r\n  font-family: 'AppleEB';\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  color: ${ColorPalette.darkBlue};\r\n  padding-bottom: 70px;\r\n  .highlighting {\r\n    height: 60px;\r\n    width: 96px;\r\n    font-family: 'AppleEB';\r\n    color: ${ColorPalette.darkBlue};\r\n    background-color: ${ColorPalette.main};\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/RyanGIF.977a65aa.gif\";","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\ninterface IButtonProps {\r\n  backgroundColor?: string;\r\n  fontColor?: string;\r\n}\r\n\r\nexport const StyledButton = styled.button<IButtonProps>`\r\n  width: 430px;\r\n  height: 50px;\r\n  background-color: ${(props) =>\r\n    props.backgroundColor || ColorPalette.darkBlue};\r\n  color: ${(props) => props.fontColor || ColorPalette.fureWhite};\r\n  font-size: ${fontPalette.font24};\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  padding: 9px;\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  align-items: center;\r\n  margin: 0;\r\n  font-weight: bold;\r\n  overflow: hidden;\r\n  border: none;\r\n`;\r\n","import { FC, ReactNode, CSSProperties } from 'react';\r\nimport { StyledButton } from './Button.style';\r\n\r\ninterface IButtonProps {\r\n  customStyle?: CSSProperties;\r\n  backgroundColor?: string;\r\n  fontColor?: string;\r\n  children: ReactNode;\r\n  handleClick?: () => void | Promise<void>;\r\n}\r\n\r\nconst Button: FC<IButtonProps> = ({\r\n  children,\r\n  backgroundColor,\r\n  fontColor,\r\n  handleClick,\r\n  customStyle,\r\n}) => {\r\n  return (\r\n    <StyledButton\r\n      style={customStyle}\r\n      onClick={handleClick}\r\n      backgroundColor={backgroundColor}\r\n      fontColor={fontColor}\r\n    >\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { useHistory } from 'react-router';\r\nimport { History } from 'history';\r\nimport { useCallback } from 'react';\r\n\r\nconst useLink = (url: string) => {\r\n  const history: History = useHistory();\r\n  const handleLink = useCallback(() => {\r\n    history.push(url);\r\n  }, [history, url]);\r\n  return { handleLink };\r\n};\r\n\r\nexport default useLink;\r\n","import useLink from 'hooks/Common/useLink';\r\nimport { CSSProperties, useMemo } from 'react';\r\n\r\nconst useWelcome = () => {\r\n  const { handleLink: pushLogin } = useLink('/login');\r\n  const { handleLink: pushRegister } = useLink('/register');\r\n\r\n  const customButtonStyle: CSSProperties = useMemo(() => {\r\n    return {\r\n      marginBottom: '20px',\r\n    };\r\n  }, []);\r\n  return {\r\n    customButtonStyle,\r\n    pushRegister,\r\n    pushLogin,\r\n  };\r\n};\r\n\r\nexport default useWelcome;\r\n","import {\r\n  StyledStartNow,\r\n  StyledTitle,\r\n  StyledTopBackground,\r\n  StyledTopHeader,\r\n} from './Welcome.style';\r\nimport RyanGIF from 'assets/Image/RyanGIF.gif';\r\nimport Button from 'components/Common/Button';\r\nimport { StyledButton } from 'components/Welcome/Welcome.style';\r\nimport useWelcome from 'hooks/Welcome/useWelcome';\r\n\r\nconst Welcome = () => {\r\n  const { pushRegister, pushLogin, customButtonStyle } = useWelcome();\r\n  return (\r\n    <div>\r\n      <StyledTopBackground>\r\n        <StyledTopHeader>\r\n          <div className=\"title\">\r\n            <div className=\"mainTitle\">카카오뱅크</div>\r\n            <div className=\"subTitle\">in DGSW</div>\r\n          </div>\r\n        </StyledTopHeader>\r\n        <StyledTitle>\r\n          <span className=\"subTitle\">대소고와 함께하는</span>\r\n          <span className=\"mainTitle\">카카오뱅크</span>\r\n        </StyledTitle>\r\n        <img src={RyanGIF} alt=\"Welcome GIF\" />\r\n      </StyledTopBackground>\r\n      <StyledStartNow>\r\n        <span className=\"highlighting\">지금</span>\r\n        시작해 보세요\r\n      </StyledStartNow>\r\n      <StyledButton>\r\n        <Button\r\n          children=\"로그인\"\r\n          handleClick={pushLogin}\r\n          customStyle={customButtonStyle}\r\n        />\r\n        <Button children=\"회원가입\" handleClick={pushRegister} />\r\n      </StyledButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import Welcome from 'components/Welcome';\r\n\r\nconst WelcomePage = () => {\r\n  return <Welcome />;\r\n};\r\n\r\nexport default WelcomePage;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\n\r\nexport const StyledFooter = styled.div`\r\n  position: fixed;\r\n  bottom: 0;\r\n  width: 100vw;\r\n  height: 60px;\r\n  margin-top: 24px;\r\n  background-color: ${ColorPalette.grey};\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .buttonWrapper {\r\n    display: flex;\r\n    text-align: center;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 520px;\r\n    padding: 14px 45px;\r\n  }\r\n`;\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPassword(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 27,\n    height: 33,\n    viewBox: \"0 0 27 33\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M4.72501 8.77491V13.4998H2.70006C1.20831 13.4998 0 14.708 0 16.1998V29.6998C0 31.1914 1.20831 32.3996 2.70006 32.3996H24.2998C25.7915 32.3996 27 31.1914 27 29.6998V16.1998C27 14.708 25.7915 13.4998 24.2998 13.4998H22.275V8.77491C22.275 3.92858 18.3462 0 13.5 0C8.65382 0 4.72501 3.92851 4.72501 8.77491ZM8.10003 13.4998V8.77491C8.10003 5.7915 10.5164 3.37487 13.4999 3.37487C16.4834 3.37487 18.9 5.7915 18.9 8.77491V13.4998H8.10003ZM10.7999 20.9248C10.7999 19.4331 12.0082 18.2249 13.4999 18.2249C14.9917 18.2249 16.1998 19.4331 16.1998 20.9248C16.1998 21.8766 15.707 22.7137 14.9647 23.1929C14.9647 23.1929 15.2284 24.7862 15.525 26.6623C15.525 27.2224 15.0728 27.6746 14.5125 27.6746H12.4874C11.9271 27.6746 11.475 27.2224 11.475 26.6623L12.0353 23.1929C11.293 22.7137 10.7999 21.8766 10.7999 20.9248Z\",\n    fill: \"#C4C4C4\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPassword);\nexport default __webpack_public_path__ + \"static/media/password.59eea648.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHome(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 27,\n    height: 27,\n    viewBox: \"0 0 27 27\",\n    fill: \"#C4C4C4\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.728443 11.7437C0.729061 11.7431 0.729679 11.7425 0.730297 11.7418L11.7442 0.728394C12.2136 0.258728 12.8378 0 13.5017 0C14.1656 0 14.7898 0.258522 15.2594 0.728188L26.2675 11.7361C26.2712 11.7398 26.275 11.7437 26.2787 11.7474C27.2427 12.717 27.2411 14.2902 26.2739 15.2573C25.8321 15.6994 25.2485 15.9554 24.6245 15.9822C24.5992 15.9847 24.5736 15.9859 24.5479 15.9859H24.1089V24.0912C24.1089 25.695 22.804 27 21.1997 27H16.8907C16.454 27 16.0997 26.6459 16.0997 26.209V19.8545C16.0997 19.1226 15.5044 18.5273 14.7725 18.5273H12.2309C11.499 18.5273 10.9037 19.1226 10.9037 19.8545V26.209C10.9037 26.6459 10.5496 27 10.1127 27H5.80371C4.19944 27 2.89447 25.695 2.89447 24.0912V15.9859H2.48742C1.82371 15.9859 1.19955 15.7274 0.729679 15.2577C-0.238491 14.289 -0.238903 12.7131 0.728443 11.7437Z\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 27,\n    height: 27,\n    fill: \"white\",\n    transform: \"matrix(-1 0 0 1 27 0)\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHome);\nexport default __webpack_public_path__ + \"static/media/home.410c1c26.svg\";\nexport { ForwardRef as ReactComponent };","import { useLocation } from 'react-router-dom';\r\n\r\nconst usePathParams = () => {\r\n  const { pathname } = useLocation();\r\n  return pathname;\r\n};\r\n\r\nexport default usePathParams;\r\n","import { StyledFooter } from './Footer.style';\r\nimport { ReactComponent as UserButton } from 'assets/icon/userBtn.svg';\r\nimport { ReactComponent as PasswordButton } from 'assets/icon/password.svg';\r\n// import { ReactComponent as ServiceButton } from 'assets/icon/squareBtn.svg';\r\nimport { ReactComponent as MainButton } from 'assets/icon/home.svg';\r\nimport usePathParams from 'hooks/Common/usePathParam';\r\nimport useLink from 'hooks/Common/useLink';\r\n\r\nconst Footer = (): JSX.Element => {\r\n  const pathParam = usePathParams();\r\n  const { handleLink: pushMain } = useLink('/main');\r\n  const { handleLink: pushProfile } = useLink('/profile');\r\n  const { handleLink: pushPassword } = useLink('/password');\r\n  // const { handleLink: pushService } = useLink('/service');\r\n\r\n  const FooterButton = (pathParam: string) => {\r\n    switch (pathParam) {\r\n      case '/main':\r\n        return (\r\n          <div className=\"buttonWrapper\">\r\n            <MainButton fill=\"#111962\" cursor=\"pointer\" onClick={pushMain} />\r\n            <PasswordButton cursor=\"pointer\" onClick={pushPassword} />\r\n            {/* <ServiceButton cursor=\"pointer\" onClick={pushService} /> */}\r\n            <UserButton cursor=\"pointer\" onClick={pushProfile} />\r\n          </div>\r\n        );\r\n      case '/service':\r\n        return (\r\n          <div className=\"buttonWrapper\">\r\n            <MainButton cursor=\"pointer\" onClick={pushMain} />\r\n            <PasswordButton\r\n              fill=\"#111962\"\r\n              cursor=\"pointer\"\r\n              onClick={pushPassword}\r\n            />\r\n            {/* <ServiceButton\r\n              fill=\"#111962\"\r\n              cursor=\"pointer\"\r\n              onClick={pushService}\r\n            /> */}\r\n            <UserButton cursor=\"pointer\" onClick={pushProfile} />\r\n          </div>\r\n        );\r\n\r\n      case '/profile':\r\n        return (\r\n          <div className=\"buttonWrapper\">\r\n            <MainButton cursor=\"pointer\" onClick={pushMain} />\r\n            <PasswordButton cursor=\"pointer\" onClick={pushPassword} />\r\n            {/* <ServiceButton cursor=\"pointer\" onClick={pushService} /> */}\r\n            <UserButton fill=\"#111962\" cursor=\"pointer\" onClick={pushProfile} />\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n  return <StyledFooter>{FooterButton(pathParam)}</StyledFooter>;\r\n};\r\n\r\nexport default Footer;\r\n","import cookies from 'js-cookie';\r\n\r\nclass Cookie {\r\n  public static getCookie = (key: string): string | undefined => {\r\n    return cookies.get(key);\r\n  };\r\n\r\n  public static setCookie = (key: string, value: string): void => {\r\n    cookies.set(key, value);\r\n  };\r\n\r\n  public static removeCookie = (key: string): void => {\r\n    cookies.remove(key);\r\n  };\r\n}\r\nexport default Cookie;\r\n","import jwt, { JwtPayload } from 'jsonwebtoken';\r\nimport Cookie from 'lib/Cookie';\r\nimport { UStorageType } from 'types/common/common.type';\r\n\r\nclass Token {\r\n  public static getToken(key: string, type: UStorageType): string {\r\n    if (type === 'cookie') {\r\n      return Cookie.getCookie(key) as string;\r\n    } else {\r\n      return sessionStorage.getItem(key) as string;\r\n    }\r\n  }\r\n\r\n  public static decodeToken(key: string) {\r\n    const accessToken: string | null = sessionStorage.getItem(key);\r\n    return jwt.decode(accessToken!) as JwtPayload;\r\n  }\r\n\r\n  public static setToken(key: string, token: string, type: UStorageType): void {\r\n    if (type === 'cookie') {\r\n      Cookie.setCookie(key, token);\r\n    } else {\r\n      sessionStorage.setItem(key, token);\r\n    }\r\n  }\r\n\r\n  public removeToken(): void {\r\n    Cookie.removeCookie('access-token');\r\n    Cookie.removeCookie('refresh-token');\r\n  }\r\n}\r\n\r\nexport default Token;\r\n","import axios from 'axios';\r\nimport { SERVER } from 'config/config.json';\r\nimport { ITokenResponse } from 'types/token/token.type';\r\n\r\nexport const getRefreshToken = async (\r\n  accessToken: string,\r\n): Promise<ITokenResponse> => {\r\n  const { data } = await axios.post<ITokenResponse>(`${SERVER}/token/refresh`, {\r\n    accessToken,\r\n  });\r\n  return data;\r\n};\r\n","import { AxiosRequestConfig } from 'axios';\r\nimport { getRefreshToken } from 'lib/api/token/token.api';\r\nimport Token from 'lib/Token';\r\nimport { ITokenResponse } from 'types/token/token.type';\r\n\r\nexport const refreshToken = async (\r\n  config: AxiosRequestConfig,\r\n): Promise<AxiosRequestConfig> => {\r\n  let accessToken: string = Token.getToken('access-token', 'session');\r\n\r\n  if (accessToken) {\r\n    const decode: any = Token.decodeToken('access-token');\r\n    const nowDate: number = Date.now() / 1000;\r\n\r\n    if (decode.exp < nowDate) {\r\n      const response: ITokenResponse = await getRefreshToken(accessToken);\r\n      const { token } = response.data;\r\n      Token.setToken('access-token', token, 'session');\r\n      accessToken = token;\r\n    }\r\n    config.headers['Authorization'] = `Bearer ${accessToken}`;\r\n  }\r\n\r\n  return config;\r\n};\r\n","import { SERVER } from 'config/config.json';\r\nimport axios, { AxiosInstance } from 'axios';\r\nimport Token from 'lib/Token';\r\nimport { refreshToken } from './refreshToken';\r\n\r\nexport const customAxios: AxiosInstance = axios.create({\r\n  baseURL: SERVER,\r\n  headers: {\r\n    'Access-Control-Allow-Origin': '*',\r\n    Authorization: `Bearer ${Token.getToken('access-token', 'session')}`,\r\n  },\r\n});\r\n\r\ncustomAxios.interceptors.request.use(refreshToken);\r\n","import { customAxios } from \"lib/Axios\";\r\nimport { IGetMyInfoResponse } from \"types/user/user.type\";\r\n\r\nexport const handleGetMyInfo = async() => {\r\n  const url: string = `/user/my`;\r\n  const { data } = await customAxios.get<IGetMyInfoResponse>(url);\r\n  return data;\r\n}","export enum ERegisterError {\r\n  id = '아이디를 제대로 입력해주세요',\r\n  pw = '비밀번호를 제대로 입력해주세요',\r\n  rePw = '비밀번호와 알맞지 않아요',\r\n  easyPw = '간편비밀번호를 설정해주세요',\r\n  phone = '폰번호를 제대로 입력해주세요',\r\n  name = '이름을 제대로 입력해주세요',\r\n  birth = '생년월일(7자리)을 제대로 입력해주세요',\r\n}\r\n","import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst showToast = (message: string, type: string): void => {\r\n  switch (type) {\r\n    case 'SUCCESS':\r\n      toast.success(message, { position: toast.POSITION.TOP_RIGHT });\r\n      break;\r\n    case 'ERROR':\r\n      toast.error(message, { position: toast.POSITION.TOP_RIGHT });\r\n      break;\r\n    case 'INFO':\r\n      toast.info(message, { position: toast.POSITION.TOP_RIGHT });\r\n      break;\r\n    default:\r\n      toast(message, { position: toast.POSITION.TOP_RIGHT });\r\n      break;\r\n  }\r\n};\r\nclass Toast {\r\n  public static successToast(message: string): void {\r\n    showToast(message, 'SUCCESS');\r\n  }\r\n  public static errorToast(message: string): void {\r\n    showToast(message, 'ERROR');\r\n  }\r\n  public static infoToast(message: string): void {\r\n    showToast(message, 'INFO');\r\n  }\r\n}\r\n\r\nexport default Toast;\r\n","import { atom } from 'recoil';\r\nimport { IUser } from 'types/user/user.type';\r\n\r\nexport const userInfoState = atom<IUser>({\r\n  key: 'userInfoState',\r\n  default: {} as IUser,\r\n});\r\n","import { handleGetMyInfo } from 'lib/api/user/user.api';\r\nimport Toast from 'lib/Toast';\r\nimport Token from 'lib/Token';\r\nimport { CSSProperties, useMemo } from 'react';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { userInfoState } from 'store/user';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nconst useHeader = () => {\r\n  const setUserInfo = useSetRecoilState(userInfoState);\r\n\r\n  const customButtonyStyle: CSSProperties = useMemo(() => {\r\n    return {\r\n      width: '100px',\r\n      height: '36px',\r\n      fontSize: `${fontPalette.font16}`,\r\n      fontFamily: 'AppleB',\r\n      fontWeight: 'normal',\r\n      boxShadow: '2px 4px 5px rgba(0, 0, 0, 0.25)',\r\n    };\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    sessionStorage.removeItem('access-token');\r\n    sessionStorage.removeItem('refresh-token');\r\n    window.location.reload();\r\n  };\r\n\r\n  const getMyInfo = async () => {\r\n    try {\r\n      const { data } = await handleGetMyInfo();\r\n      setUserInfo(data);\r\n    } catch (e: any) {\r\n      Toast.errorToast(e.response.data.message);\r\n    }\r\n  };\r\n\r\n  const loadMyInfo = () => {\r\n    if (checkToken()) {\r\n      getMyInfo();\r\n    } else {\r\n      logout();\r\n    }\r\n  };\r\n\r\n  const checkToken = () => {\r\n    if (Token.getToken('refresh-token', 'session')) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return {\r\n    customButtonyStyle,\r\n    loadMyInfo,\r\n    logout,\r\n  };\r\n};\r\n\r\nexport default useHeader;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyleHeader = styled.div`\r\n  width: 100vw;\r\n  height: 72px;\r\n  display: flex;\r\n  text-align: center;\r\n  background-color: ${ColorPalette.main};\r\n  justify-content: center;\r\n  margin-bottom: 45px;\r\n  align-items: center;\r\n\r\n  .HeaderWrapper {\r\n    width: 430px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    text-align: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    .title {\r\n      .mainTitle {\r\n        display: inline-block;\r\n        background: none;\r\n        color: ${ColorPalette.darkBlue};\r\n        font-size: ${fontPalette.font20};\r\n        font-family: 'AppleEB';\r\n      }\r\n      .subTitle {\r\n        display: inline-block;\r\n        background: none;\r\n        color: ${ColorPalette.darkBlue};\r\n        font-size: ${fontPalette.font14};\r\n        font-family: 'AppleEB';\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import Button from 'components/Common/Button';\r\nimport useLink from 'hooks/Common/useLink';\r\nimport useHeader from 'hooks/Header/useHeader';\r\nimport useTheme from 'hooks/Theme/useTheme';\r\nimport { useEffect } from 'react';\r\nimport { StyleHeader } from './Header.style';\r\n\r\nconst Header = ({\r\n  isLogout,\r\n  isLoadInfo,\r\n  path,\r\n}: {\r\n  isLogout: boolean;\r\n  isLoadInfo: boolean;\r\n  path: string;\r\n}) => {\r\n  const { loadMyInfo, customButtonyStyle, logout } = useHeader();\r\n  const { handleLink: pushPath } = useLink(path);\r\n\r\n  useEffect(() => {\r\n    if (isLoadInfo) {\r\n      loadMyInfo();\r\n    }\r\n  }, [isLoadInfo, loadMyInfo]);\r\n\r\n  return (\r\n    <StyleHeader>\r\n      <div className={'HeaderWrapper'} onClick={pushPath}>\r\n        <div className=\"title\">\r\n          <div className=\"mainTitle\">카카오뱅크</div>\r\n          <div className=\"subTitle\">in DGSW</div>\r\n        </div>\r\n        {isLogout && (\r\n          <Button customStyle={customButtonyStyle} handleClick={logout}>\r\n            로그아웃\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </StyleHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const StyledPageTemplate = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 430px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledPageTemplateContent = styled.div`\r\n  width: 430px;\r\n  max-width: 430px;\r\n  margin-bottom: 80px;\r\n`;\r\n","import { ReactNode } from 'react';\r\nimport Footer from '../Footer';\r\nimport Header from '../Header';\r\nimport {\r\n  StyledPageTemplateContent,\r\n  StyledPageTemplate,\r\n} from './PageTemplate.style';\r\n\r\ninterface IPageTemplateProps {\r\n  children: ReactNode;\r\n  isLogout: boolean;\r\n  isFooter: boolean;\r\n  isHeader: boolean;\r\n  isLoadInfo?: boolean;\r\n  path?: string;\r\n}\r\n\r\nconst PageTemplate = ({\r\n  isHeader,\r\n  children,\r\n  isLogout,\r\n  isFooter,\r\n  path = '/main',\r\n  isLoadInfo = true,\r\n}: IPageTemplateProps) => {\r\n  return (\r\n    <StyledPageTemplate>\r\n      {isHeader && (\r\n        <Header path={path} isLoadInfo={isLoadInfo} isLogout={isLogout} />\r\n      )}\r\n      <StyledPageTemplateContent>{children}</StyledPageTemplateContent>\r\n      {isFooter && <Footer />}\r\n    </StyledPageTemplate>\r\n  );\r\n};\r\n\r\nexport default PageTemplate;\r\n","import styled from '@emotion/styled';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledTitle = styled.div`\r\n  font-family: 'AppleB';\r\n  font-size: ${fontPalette.font40};\r\n  text-align: start;\r\n  margin-top: 12px;\r\n  margin-bottom: 30px;\r\n  color: ${(props) => props.theme.fontColor};\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledInfoInput = styled.input`\r\n  width: 430px;\r\n  height: 41px;\r\n  background-color: ${ColorPalette.grey};\r\n  color: ${ColorPalette.fureBlack};\r\n  font-size: ${fontPalette.font16};\r\n  border-radius: 10px;\r\n  padding: 10px 16px;\r\n  justify-content: center;\r\n  text-align: start;\r\n  margin: 0;\r\n  border: none;\r\n  &::placeholder {\r\n    color: ${ColorPalette.darkGrey};\r\n  }\r\n`;\r\n","import { ChangeEvent, CSSProperties } from 'react';\r\nimport { StyledInfoInput } from './InfoInput.style';\r\n\r\ninterface IInfoInputProps {\r\n  name?: string;\r\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\r\n  value: string;\r\n  type?: string;\r\n  placeholder: string;\r\n  customStyle?: CSSProperties;\r\n  maxLength?: number; \r\n}\r\n\r\nconst InfoInput = ({\r\n  name,\r\n  onChange,\r\n  value,\r\n  type,\r\n  placeholder,\r\n  customStyle,\r\n  maxLength,\r\n}: IInfoInputProps) => {\r\n  return (\r\n    <StyledInfoInput\r\n      type={type ? type : 'text'}\r\n      style={customStyle}\r\n      onChange={onChange}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      name={name}\r\n      maxLength={maxLength && maxLength}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InfoInput;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin-bottom: 16px;\r\n  min-height: 125px;\r\n  .title {\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font30};\r\n    margin-bottom: 8px;\r\n    color: ${(props) => props.theme.fontColor};\r\n  }\r\n\r\n  .error {\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font14};\r\n    color: ${ColorPalette.highlightRed};\r\n    &::before {\r\n      content: ' *';\r\n      color: ${ColorPalette.highlightRed};\r\n    }\r\n  }\r\n`;\r\n","import { ChangeEvent, CSSProperties } from 'react';\r\nimport InfoInput from '../Input/InfoInput';\r\nimport { StyledForm } from './Form.style';\r\n\r\ninterface IFormProps {\r\n  title: string;\r\n  error: string;\r\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\r\n  value: string;\r\n  placeholder: string;\r\n  type?: string;\r\n  name: string;\r\n  maxLength?: number;\r\n  customInputStyle?: CSSProperties;\r\n  customTitleInputStyle?: CSSProperties;\r\n}\r\n\r\nconst Form = ({\r\n  error,\r\n  name,\r\n  onChange,\r\n  placeholder,\r\n  title,\r\n  value,\r\n  customInputStyle,\r\n  customTitleInputStyle,\r\n  maxLength,\r\n  type,\r\n}: IFormProps): JSX.Element => {\r\n  return (\r\n    <StyledForm>\r\n      <div className=\"title\" style={customTitleInputStyle}>\r\n        {title}\r\n      </div>\r\n      <InfoInput\r\n        type={type ? type : 'text'}\r\n        onChange={onChange}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        customStyle={customInputStyle}\r\n        maxLength={maxLength && maxLength}\r\n      />\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","const makeBirth = (birth: string): string => {\r\n  return birth\r\n    .replace(/[^0-9]/g, '')  \r\n    .replace(/(\\d{6})(\\d{1})/g, '$1-$2')\r\n    .replace('--', '-');\r\n};\r\n\r\nexport default makeBirth;","export const removeHyphen = (value: string): string => {\r\n  return value\r\n    .split('')\r\n    .filter((v: string) => v !== '-')\r\n    .join('');\r\n};\r\n","import { customAxios } from 'lib/Axios';\r\nimport {\r\n  IEasyLoginDto,\r\n  IEasyLoginResponse,\r\n  IEasyRegisterDto,\r\n  IEasyRegisterResponse,\r\n  ILoginDto,\r\n  ILoginResponse,\r\n  IRegisterDto,\r\n} from 'types/auth/auth.type';\r\nimport { IResponse } from 'types/response/response.type';\r\n\r\nexport const handleRegister = async (\r\n  registerDto: IRegisterDto,\r\n): Promise<IResponse> => {\r\n  const url: string = `/auth/register`;\r\n  const { data } = await customAxios.post<IResponse>(url, registerDto);\r\n  return data;\r\n};\r\n\r\nexport const handleEasyRegister = async (\r\n  registerDto: IEasyRegisterDto,\r\n): Promise<IEasyRegisterResponse> => {\r\n  const url: string = `/auth/easy/register`;\r\n  const { data } = await customAxios.post<IEasyRegisterResponse>(\r\n    url,\r\n    registerDto,\r\n  );\r\n  return data;\r\n};\r\n\r\nexport const handleLogin = async (\r\n  loginDto: ILoginDto,\r\n): Promise<ILoginResponse> => {\r\n  const url: string = `/auth/login`;\r\n  const { data } = await customAxios.post<ILoginResponse>(url, loginDto);\r\n  return data;\r\n};\r\n\r\nexport const handleEasyLogin = async (\r\n  loginDto: IEasyLoginDto,\r\n): Promise<IEasyLoginResponse> => {\r\n  const url: string = `/auth/easy/login`;\r\n  const { data } = await customAxios.post<IEasyLoginResponse>(url, loginDto);\r\n  return data;\r\n};\r\n","const makePhoneNumber = (phoneNumber: string): string => {\r\n  return phoneNumber\r\n    .replace(/[^0-9]/g, '')\r\n    .replace(\r\n      /(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/,\r\n      '$1-$2-$3',\r\n    )\r\n    .replace('--', '-');\r\n};\r\n\r\nexport default makePhoneNumber;\r\n","class registerValidation {\r\n  public static checkEmptyState = (obj: Object) => {\r\n    let check = 0;\r\n    for (let [_, value] of Object.entries(obj)) {\r\n      if (value.length <= 0 || value === null || value === undefined) {\r\n        check++;\r\n        break;\r\n      }\r\n    }\r\n    if (check > 0) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  public static checkErrorState = (obj: any) => {\r\n    for (const value in obj) {\r\n      if (obj[value].length !== 0) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n}\r\n\r\nexport default registerValidation;\r\n","export enum ELoginEnum {\r\n  id = '아이디를 제대로 입력해주세요',\r\n  pw = '비밀번호를 제대로 입력해주세요',\r\n  easyPw = '간편비밀번호를 입력해주세요',\r\n  }\r\n","import { atom } from 'recoil';\r\nimport {\r\n  IRegisterErrorTypes,\r\n  IRegisterTypes,\r\n} from 'types/auth/auth.type';\r\n\r\nexport const registerAtom = atom<IRegisterTypes>({\r\n  key: 'registerAtom',\r\n  default: {\r\n    id: '',\r\n    pw: '',\r\n    rePw: '',\r\n    phone: '',\r\n    name: '',\r\n    birth: '',\r\n  },\r\n});\r\n\r\nexport const registerErrorAtom = atom<IRegisterErrorTypes>({\r\n  key: 'registerErrorAtom',\r\n  default: {\r\n    id: '',\r\n    pw: '',\r\n    rePw: '',\r\n    phone: '',\r\n    name: '',\r\n    birth: '',\r\n  },\r\n});\r\n","import Toast from 'lib/Toast';\r\nimport makeBirth from 'util/makeBirth';\r\nimport { ChangeEvent, useState } from 'react';\r\nimport { removeHyphen } from 'util/removeHyphen';\r\nimport { ERegisterError } from 'enum/registerEnum';\r\nimport { handleRegister } from 'lib/api/auth/auth.api';\r\nimport makePhoneNumber from 'util/makePhoneNumber';\r\nimport { useRecoilState, useResetRecoilState } from 'recoil';\r\nimport registerValidation from 'validation/register.validation';\r\nimport { registerAtom, registerErrorAtom } from 'store/register';\r\nimport useLink from 'hooks/Common/useLink';\r\n\r\nconst useRegister = () => {\r\n  const [registerState, setRegisterState] = useRecoilState(registerAtom);\r\n  const [errorState, setErrorState] = useRecoilState(registerErrorAtom);\r\n  const [checkTerm, setCheckTerm] = useState(false);\r\n  const resetRegisterState = useResetRecoilState(registerAtom);\r\n  const resetErrorState = useResetRecoilState(registerErrorAtom);\r\n  \r\n  const { handleLink: pushLogin } = useLink('/login');\r\n\r\n  const onChangeRegisterState = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value }: { name: string; value: string } = e.target;\r\n    if (name === 'phone') {\r\n      setRegisterState({ ...registerState, [name]: makePhoneNumber(value) });\r\n      onChangeErrorState({ name, value });\r\n    } else if (name === 'birth') {\r\n      setRegisterState({ ...registerState, [name]: makeBirth(value) });\r\n      onChangeErrorState({ name, value });\r\n    } else {\r\n      setRegisterState({ ...registerState, [name]: value });\r\n      onChangeErrorState({ name, value });\r\n    }\r\n  };\r\n\r\n  const onChangeErrorState = ({\r\n    name,\r\n    value,\r\n  }: {\r\n    name: string;\r\n    value: string;\r\n  }) => {\r\n    switch (name) {\r\n      case 'rePw':\r\n        onCheckRePW(value);\r\n        break;\r\n      case 'phone':\r\n        onCheckPhone(value);\r\n        break;\r\n      case 'birth':\r\n        onCheckBirth(value);\r\n        break;\r\n      default:\r\n        onCheckDefault({ name, value });\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onCheckDefault = ({ name, value }: { name: string; value: string }) => {\r\n    if (value.length <= 0) {\r\n      setErrorState({\r\n        ...errorState,\r\n        [name]: ERegisterError[name as keyof typeof ERegisterError],\r\n      });\r\n    } else {\r\n      setErrorState({ ...errorState, [name]: '' });\r\n    }\r\n  };\r\n\r\n  const onCheckBirth = (value: string) => {\r\n    if (value.length !== 7) {\r\n      setErrorState({\r\n        ...errorState,\r\n        birth: ERegisterError.birth,\r\n      });\r\n    } else {\r\n      setErrorState({ ...errorState, birth: '' });\r\n    }\r\n  };\r\n\r\n  const onCheckPhone = (value: string) => {\r\n    if (value.length !== 13) {\r\n      setErrorState({\r\n        ...errorState,\r\n        phone: ERegisterError.phone,\r\n      });\r\n    } else {\r\n      setErrorState({ ...errorState, phone: '' });\r\n    }\r\n  };\r\n\r\n  const onCheckRePW = (value: string) => {\r\n    if (registerState.pw !== value) {\r\n      setErrorState({\r\n        ...errorState,\r\n        rePw: ERegisterError.rePw,\r\n      });\r\n    } else {\r\n      setErrorState({ ...errorState, rePw: '' });\r\n    }\r\n  };\r\n\r\n  const onClickRegister = () => {\r\n    if (\r\n      registerValidation.checkEmptyState(registerState) &&\r\n      checkTerm &&\r\n      registerValidation.checkErrorState(errorState)\r\n    ) {\r\n      register();\r\n    } else {\r\n      if (\r\n        !registerValidation.checkErrorState(errorState) ||\r\n        !registerValidation.checkEmptyState(registerState)\r\n      ) {\r\n        Toast.errorToast('제대로 작성해주세요');\r\n      } else {\r\n        Toast.errorToast('약관에 동의해주세요');\r\n      }\r\n    }\r\n  };\r\n\r\n  const register = async () => {\r\n    try {\r\n      const data = {\r\n        id: registerState.id,\r\n        pw: registerState.pw,\r\n        phone: removeHyphen(registerState.phone),\r\n        name: registerState.name,\r\n        birth: removeHyphen(registerState.birth),\r\n      };\r\n      await handleRegister(data);\r\n      resetAllState();\r\n      pushLogin();\r\n    } catch (e: any) {\r\n      Toast.errorToast(e.response.data.message);\r\n    }\r\n  };\r\n\r\n  const resetAllState = () => {\r\n    resetRegisterState();\r\n    resetErrorState();\r\n    setCheckTerm(false);\r\n  };\r\n\r\n  return {\r\n    registerState,\r\n    errorState,\r\n    onClickRegister,\r\n    onChangeRegisterState,\r\n    checkTerm,\r\n    setCheckTerm,\r\n    resetAllState,\r\n  };\r\n};\r\n\r\nexport default useRegister;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\ninterface ITermModal {\r\n  show: boolean;\r\n}\r\n\r\nexport const StyledTermModal = styled.div<ITermModal>`\r\n  position: fixed;\r\n  display: ${(props) => (props.show ? 'block' : 'none')};\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: ${ColorPalette.grey};\r\n  outline: 0;\r\n`;\r\n\r\nexport const StyledTermModalWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n`;\r\n\r\nexport const StyledTermModalContent = styled.div`\r\n  width: 400px;\r\n  height: 600px;\r\n  overflow-y: scroll;\r\n  background-color: ${ColorPalette.fureWhite};\r\n  padding: 36px;\r\n  border-radius: 6px;\r\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\r\n  .title {\r\n    font-family: 'AppleEB';\r\n    font-size: ${fontPalette.font40};\r\n    margin-bottom: 12px;\r\n  }\r\n  .content {\r\n    font-size: ${fontPalette.font20};\r\n    word-break: keep-all;\r\n    line-height: 30px;\r\n  }\r\n`;\r\n","import { RefObject, useEffect } from 'react';\r\nimport {\r\n  StyledTermModal,\r\n  StyledTermModalContent,\r\n  StyledTermModalWrapper,\r\n} from './TermModal.style';\r\n\r\nconst TermModal = ({\r\n  show,\r\n  onClickOutside,\r\n  outSideRef,\r\n}: {\r\n  show: boolean;\r\n  onClickOutside: (e: any) => void;\r\n  outSideRef: RefObject<HTMLDivElement>;\r\n}) => {\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', onClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', onClickOutside);\r\n    };\r\n  }, [onClickOutside]);\r\n  return (\r\n    <StyledTermModal show={show}>\r\n      <StyledTermModalWrapper>\r\n        <StyledTermModalContent ref={outSideRef}>\r\n          <div className=\"title\">약관안내</div>\r\n          <div className=\"content\">\r\n            카카오뱅크 in DGSW 서비스에서는 사용자의 주민등록번호 7자리 및\r\n            휴대전화번호, 이름을 수집하고있습니다. 해당 정보는 서비스를 위해서\r\n            잘 쓰일것이니 미리 감사인사드립니다. 항상 감사합니다. 그리고 다른\r\n            은행보다 많이 싸고 좋은 은행이니까 열심히 이용해주세요 블라블라블라\r\n            카카오뱅크 in DGSW 서비스에서는 사용자의 주민등록번호 7자리 및\r\n            휴대전화번호, 이름을 수집하고있습니다. 해당 정보는 서비스를 위해서\r\n            잘 쓰일것이니 미리 감사인사드립니다. 항상 감사합니다. 그리고 다른\r\n            은행보다 많이 싸고 좋은 은행이니까 열심히 이용해주세요 블라블라블라\r\n            카카오뱅크 in DGSW 서비스에서는 사용자의 주민등록번호 7자리 및\r\n            휴대전화번호, 이름을 수집하고있습니다. 해당 정보는 서비스를 위해서\r\n            잘 쓰일것이니 미리 감사인사드립니다. 항상 감사합니다. 그리고 다른\r\n            은행보다 많이 싸고 좋은 은행이니까 열심히 이용해주세요 블라블라블라\r\n            감사합니다.\r\n          </div>\r\n        </StyledTermModalContent>\r\n      </StyledTermModalWrapper>\r\n    </StyledTermModal>\r\n  );\r\n};\r\n\r\nexport default TermModal;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyleTerm = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\ninterface IButtonProps {\r\n  check: boolean;\r\n}\r\n\r\nexport const StyleTermButton = styled.div<IButtonProps>`\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  margin-right: 10px;\r\n  background-color: ${(props) =>\r\n    props.check ? ColorPalette.darkBlue : ColorPalette.darkGrey};\r\n\r\n  border: ${(props) =>\r\n    props.check ? `4px solid ${ColorPalette.darkGrey}` : `none`};\r\n`;\r\n\r\nexport const StyleTermLink = styled.div`\r\n  cursor: pointer;\r\n  font-family: 'AppleB';\r\n  font-size: ${fontPalette.font16};\r\n  color: ${ColorPalette.darkBlue};\r\n  text-decoration-line: underline;\r\n  text-underline-offset: 6px;\r\n`;\r\n","import {\r\n  MouseEvent,\r\n  MouseEventHandler,\r\n  RefObject,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport TermModal from '../TermModal';\r\nimport { StyleTerm, StyleTermButton, StyleTermLink } from './Term.style';\r\n\r\ninterface ITermProps {\r\n  onClick: MouseEventHandler<HTMLDivElement>;\r\n  check: boolean;\r\n}\r\n\r\nconst Term = ({ onClick, check }: ITermProps) => {\r\n  const modalEl: RefObject<HTMLDivElement> = useRef<HTMLDivElement>(null);\r\n  const [click, setClick] = useState(false);\r\n\r\n  const handleClickOutside = (e: MouseEvent): void => {\r\n    if (modalEl.current && !modalEl.current.contains(e.target as Node)) {\r\n      setClick(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyleTerm>\r\n      <StyleTermButton onClick={onClick} check={check} />\r\n      <StyleTermLink onClick={() => setClick((prev) => !prev)}>\r\n        약관동의\r\n      </StyleTermLink>\r\n      <TermModal\r\n        outSideRef={modalEl}\r\n        show={click}\r\n        onClickOutside={handleClickOutside}\r\n      />\r\n    </StyleTerm>\r\n  );\r\n};\r\n\r\nexport default Term;\r\n","import { StyledTitle } from './Register.style';\r\nimport Form from 'components/Common/Form';\r\nimport useRegister from 'hooks/Register/useRegister';\r\nimport Term from './Term';\r\nimport Button from 'components/Common/Button';\r\nimport { useEffect } from 'react';\r\n\r\nconst Register = () => {\r\n  const {\r\n    checkTerm,\r\n    setCheckTerm,\r\n    registerState,\r\n    errorState,\r\n    onChangeRegisterState,\r\n    onClickRegister,\r\n    resetAllState,\r\n  } = useRegister();\r\n\r\n  useEffect(() => {\r\n    resetAllState();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <StyledTitle>회원가입</StyledTitle>\r\n      <Form\r\n        onChange={onChangeRegisterState}\r\n        title=\"이름\"\r\n        placeholder=\"이름을 입력해주세요\"\r\n        name=\"name\"\r\n        value={registerState.name}\r\n        error={errorState.name}\r\n        customInputStyle={{ marginBottom: '4px' }}\r\n      />\r\n      <Form\r\n        onChange={onChangeRegisterState}\r\n        title=\"아이디\"\r\n        placeholder=\"아이디를 입력해주세요\"\r\n        name=\"id\"\r\n        value={registerState.id}\r\n        error={errorState.id}\r\n        customInputStyle={{ marginBottom: '4px' }}\r\n      />\r\n      <Form\r\n        onChange={onChangeRegisterState}\r\n        title=\"비밀번호\"\r\n        placeholder=\"비밀번호를 입력해주세요\"\r\n        type=\"password\"\r\n        name=\"pw\"\r\n        value={registerState.pw}\r\n        error={errorState.pw}\r\n        customInputStyle={{ marginBottom: '4px' }}\r\n      />\r\n      <Form\r\n        onChange={onChangeRegisterState}\r\n        title=\"비밀번호 재입력\"\r\n        placeholder=\"비밀번호를 다시 입력해주세요\"\r\n        type=\"password\"\r\n        name=\"rePw\"\r\n        value={registerState.rePw}\r\n        error={errorState.rePw}\r\n        customInputStyle={{ marginBottom: '4px' }}\r\n      />\r\n      <Form\r\n        onChange={onChangeRegisterState}\r\n        title=\"전화번호\"\r\n        placeholder=\"전화번호를 입력해주세요\"\r\n        name=\"phone\"\r\n        value={registerState.phone}\r\n        error={errorState.phone}\r\n        maxLength={13}\r\n        customInputStyle={{ marginBottom: '4px' }}\r\n      />\r\n      <Form\r\n        onChange={onChangeRegisterState}\r\n        title=\"생년월일\"\r\n        placeholder=\"생년월일(7자리) 입력해주세요\"\r\n        name=\"birth\"\r\n        value={registerState.birth}\r\n        error={errorState.birth}\r\n        maxLength={8}\r\n        customInputStyle={{ marginBottom: '4px' }}\r\n      />\r\n      <Term onClick={() => setCheckTerm((prev) => !prev)} check={checkTerm} />\r\n      <Button children=\"회원가입\" handleClick={onClickRegister} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import PageTemplate from 'components/Common/Base/PageTemplate';\r\nimport Register from 'components/Register';\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <PageTemplate\r\n      path=\"/\"\r\n      isLoadInfo={false}\r\n      isHeader\r\n      isFooter={false}\r\n      isLogout={false}\r\n    >\r\n      <Register />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import { atom } from 'recoil';\r\n\r\nexport const idState = atom<string>({\r\n  key: 'idState',\r\n  default: '',\r\n});\r\n\r\nexport const pwState = atom<string>({\r\n  key: 'pwState',\r\n  default: '',\r\n});\r\n\r\nexport const easyPwState = atom<string>({\r\n  key: 'easyPwState',\r\n  default: '',\r\n});\r\n\r\nexport const idErrorState = atom<string>({\r\n  key: 'idErrorState',\r\n  default: '',\r\n});\r\n\r\nexport const pwErrorState = atom<string>({\r\n  key: 'pwErrorState',\r\n  default: '',\r\n});\r\n\r\nexport const easyPwErrorState = atom<string>({\r\n  key: 'easyPwErrorState',\r\n  default: '',\r\n});\r\n","import {\r\n  easyPwErrorState,\r\n  easyPwState,\r\n  idErrorState,\r\n  idState,\r\n  pwErrorState,\r\n  pwState,\r\n} from 'store/login';\r\nimport Toast from 'lib/Toast';\r\nimport { ChangeEvent, useState } from 'react';\r\nimport { ELoginEnum } from 'enum/loginEnum';\r\nimport useLink from 'hooks/Common/useLink';\r\nimport { useRecoilState, useResetRecoilState, useSetRecoilState } from 'recoil';\r\nimport { handleEasyLogin, handleLogin } from 'lib/api/auth/auth.api';\r\nimport Token from 'lib/Token';\r\nimport { userInfoState } from 'store/user';\r\n\r\nconst useLogin = () => {\r\n  const { handleLink: pushMain } = useLink('/main');\r\n  const [isEasyLogin, setIsEasyLogin] = useState<boolean>(false);\r\n  const [id, setId] = useRecoilState(idState);\r\n  const [pw, setPw] = useRecoilState(pwState);\r\n  const [easyPw, setEasyPw] = useRecoilState(easyPwState);\r\n  const [idError, setIdError] = useRecoilState(idErrorState);\r\n  const [pwError, setPwError] = useRecoilState(pwErrorState);\r\n  const [easyPwError, setEasyPwError] = useRecoilState(easyPwErrorState);\r\n  const setUserInfo = useSetRecoilState(userInfoState);\r\n\r\n  const resetIdState = useResetRecoilState(idState);\r\n  const resetPwState = useResetRecoilState(pwState);\r\n  const resetEasyPwState = useResetRecoilState(easyPwState);\r\n  const resetIdErrorState = useResetRecoilState(idErrorState);\r\n  const resetPwErrorState = useResetRecoilState(pwErrorState);\r\n  const resetEasyPwErrorState = useResetRecoilState(easyPwErrorState);\r\n\r\n  const onChangeEasyLogin = () => {\r\n    setIsEasyLogin((prev) => !prev);\r\n    resetIdState();\r\n    resetPwState();\r\n    resetEasyPwState();\r\n    resetIdErrorState();\r\n    resetPwErrorState();\r\n    resetEasyPwErrorState();\r\n  };\r\n\r\n  const onChangeIdState = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setId(e.target.value);\r\n    checkIdErrorState(e.target.value);\r\n  };\r\n\r\n  const checkIdErrorState = (value: string) => {\r\n    if (value.length <= 0) {\r\n      setIdError(ELoginEnum.id);\r\n    } else {\r\n      resetIdErrorState();\r\n    }\r\n  };\r\n\r\n  const onChangePwState = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPw(e.target.value);\r\n    checkPwErrorState(e.target.value);\r\n  };\r\n\r\n  const checkPwErrorState = (value: string) => {\r\n    if (value.length <= 0) {\r\n      setPwError(ELoginEnum.pw);\r\n    } else {\r\n      resetPwErrorState();\r\n    }\r\n  };\r\n\r\n  const onChnageEasyPwState = (res: string) => {\r\n    setEasyPw(res);\r\n    checkEasyPwErrorState(res);\r\n  };\r\n\r\n  const checkEasyPwErrorState = (value: string) => {\r\n    if (value.length < 6) {\r\n      setEasyPwError(ELoginEnum.easyPw);\r\n    } else {\r\n      resetEasyPwErrorState();\r\n    }\r\n  };\r\n\r\n  const onClickLoginBtn = () => {\r\n    if (isEasyLogin) {\r\n      if (id.length <= 0 || pw.length <= 0) {\r\n        Toast.errorToast('아이디 또는 비밀번호를 제대로 입력해주세요');\r\n        return;\r\n      }\r\n      login();\r\n    } else {\r\n      if (easyPw.length !== 6) {\r\n        Toast.errorToast('간편비밀번호 6자리를 제대로 입력해주세요');\r\n        return;\r\n      }\r\n      if (Token.getToken('easyToken', 'cookie') === undefined) {\r\n        Toast.infoToast('간편비밀번호 설정을 해주세요');\r\n        return;\r\n      }\r\n      easyLogin();\r\n    }\r\n  };\r\n\r\n  const login = async () => {\r\n    try {\r\n      const req = { id, pw };\r\n      const { data } = await handleLogin(req);\r\n      setLoginToken({\r\n        accessToken: data.token,\r\n        refreshToken: data.refreshToken,\r\n      });\r\n      setUserInfo(data.user);\r\n      pushMain();\r\n    } catch (e: any) {\r\n      Toast.errorToast(e.response.data.message);\r\n    }\r\n  };\r\n\r\n  const easyLogin = async () => {\r\n    try {\r\n      const req = {\r\n        easyLoginId: Token.getToken('easyToken', 'cookie'),\r\n        key: easyPw,\r\n      };\r\n      const { data } = await handleEasyLogin(req);\r\n      setLoginToken({\r\n        accessToken: data.token,\r\n        refreshToken: data.refreshToken,\r\n      });\r\n      setUserInfo(data.user);\r\n      pushMain();\r\n    } catch (e: any) {\r\n      Toast.errorToast(e.response.data.message);\r\n    }\r\n  };\r\n\r\n  const setLoginToken = ({\r\n    accessToken,\r\n    refreshToken,\r\n  }: {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n  }) => {\r\n    Token.setToken('access-token', accessToken, 'session');\r\n    Token.setToken('refresh-token', refreshToken, 'session');\r\n  };\r\n\r\n  return {\r\n    id,\r\n    pw,\r\n    easyPw,\r\n    idError,\r\n    pwError,\r\n    easyPwError,\r\n    isEasyLogin,\r\n    onChangeIdState,\r\n    onChangePwState,\r\n    onChnageEasyPwState,\r\n    onChangeEasyLogin,\r\n    onClickLoginBtn,\r\n  };\r\n};\r\n\r\nexport default useLogin;\r\n","import {\r\n  ChangeEvent,\r\n  ClipboardEvent,\r\n  FocusEvent,\r\n  KeyboardEvent,\r\n  useRef,\r\n} from 'react';\r\n\r\ninterface IUseAuthInput {\r\n  Reg: RegExp;\r\n  length: number;\r\n  onChange: (res: string) => void;\r\n}\r\n\r\nconst useAuthInput = ({ Reg, onChange, length }: IUseAuthInput) => {\r\n  const inputsRef = useRef<Array<HTMLInputElement>>([]);\r\n\r\n  const sendResult = () => {\r\n    const res = inputsRef.current.map((input) => input.value).join('');\r\n    onChange(res);\r\n  };\r\n\r\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.value.match(Reg)) {\r\n      if (e.target.nextElementSibling !== null) {\r\n        (e.target.nextElementSibling as HTMLInputElement).focus();\r\n      }\r\n    } else {\r\n      e.target.value = '';\r\n    }\r\n    sendResult();\r\n  };\r\n\r\n  const handleOnKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    const { key } = e;\r\n    const target = e.target as HTMLInputElement;\r\n\r\n    if (key === 'Backspace') {\r\n      if (target.value === '' && target.previousElementSibling !== null) {\r\n        if (target.previousElementSibling !== null) {\r\n          (target.previousElementSibling as HTMLInputElement).focus();\r\n          e.preventDefault();\r\n        }\r\n      } else {\r\n        target.value = '';\r\n      }\r\n      sendResult();\r\n    }\r\n  };\r\n\r\n  const handleOnFocus = (e: FocusEvent<HTMLInputElement>) => {\r\n    e.target.select();\r\n  };\r\n\r\n  const handleOnPaste = (e: ClipboardEvent<HTMLInputElement>) => {\r\n    const value = e.clipboardData.getData('Text');\r\n    if (value.match(Reg)) {\r\n      for (let i = 0; i < length && i < value.length; i++) {\r\n        inputsRef.current[i].value = value.charAt(i);\r\n        if (inputsRef.current[i].nextElementSibling !== null) {\r\n          (inputsRef.current[i].nextElementSibling as HTMLInputElement).focus();\r\n        }\r\n      }\r\n      sendResult();\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  return {\r\n    handleOnChange,\r\n    handleOnPaste,\r\n    handleOnFocus,\r\n    handleOnKeyDown,\r\n    inputsRef,\r\n  };\r\n};\r\n\r\nexport default useAuthInput;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledAuthInput = styled.input`\r\n  width: 60px;\r\n  height: 60px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  background-color: ${ColorPalette.grey};\r\n  font-size: ${fontPalette.font36};\r\n  line-height: 30px;\r\n  font-weight: bold;\r\n  justify-content: center;\r\n  text-align: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyleAuthContainer = styled.div`\r\n  width: 430px;\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  align-items: center;\r\n`;\r\n","import useAuthInput from 'hooks/Common/useAuthInput';\r\nimport { CSSProperties, FC } from 'react';\r\nimport { StyleAuthContainer, StyledAuthInput } from './AuthInput.style';\r\n\r\ninterface IAuthInputProps {\r\n  length?: number;\r\n  Reg?: RegExp;\r\n  onChange: (res: string) => void;\r\n  password?: boolean;\r\n  customInputStyle?: CSSProperties;\r\n  customContainerStyle?: CSSProperties;\r\n}\r\n\r\nconst AuthInput: FC<IAuthInputProps> = ({\r\n  length = 6,\r\n  Reg = new RegExp('^[0-9]*$'),\r\n  customContainerStyle,\r\n  customInputStyle,\r\n  password,\r\n  onChange,\r\n}) => {\r\n  const {\r\n    handleOnChange,\r\n    inputsRef,\r\n    handleOnPaste,\r\n    handleOnFocus,\r\n    handleOnKeyDown,\r\n  } = useAuthInput({ Reg, length, onChange });\r\n\r\n  const inputs: JSX.Element[] = [];\r\n  for (let i = 0; i < length; i++) {\r\n    inputs.push(\r\n      <StyledAuthInput\r\n        key={i}\r\n        onChange={handleOnChange}\r\n        onKeyDown={handleOnKeyDown}\r\n        onFocus={handleOnFocus}\r\n        onPaste={handleOnPaste}\r\n        type={password ? 'password' : 'text'}\r\n        ref={(el: HTMLInputElement) => (inputsRef.current[i] = el)}\r\n        maxLength={1}\r\n        style={customInputStyle}\r\n      />,\r\n    );\r\n  }\r\n\r\n  return (\r\n    <StyleAuthContainer style={customContainerStyle}>\r\n      {inputs}\r\n    </StyleAuthContainer>\r\n  );\r\n};\r\n\r\nexport default AuthInput;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 174px;\r\n  min-height: 160px;\r\n  .title {\r\n    text-align: start;\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font24};\r\n    color: ${(props) => props.theme.fontColor};\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  .error {\r\n    text-align: start;\r\n    &::before {\r\n      content: '*';\r\n    }\r\n    margin-top: 8px;\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font14};\r\n    color: ${ColorPalette.highlightRed};\r\n  }\r\n`;\r\n","import { CSSProperties } from 'react';\r\nimport AuthInput from '../Input/AuthInput';\r\nimport { StyledForm } from './AuthForm.style';\r\n\r\ninterface IAuthFormProps {\r\n  title: string;\r\n  error: string;\r\n  onChange: (res: string) => void;\r\n  length?: number;\r\n  customTitleStyle?: CSSProperties;\r\n  customErrorStyle?: CSSProperties;\r\n}\r\n\r\nconst AuthForm = ({\r\n  title,\r\n  onChange,\r\n  error,\r\n  customErrorStyle,\r\n  customTitleStyle,\r\n  length = 6,\r\n}: IAuthFormProps): JSX.Element => {\r\n  return (\r\n    <StyledForm>\r\n      <div className=\"title\" style={customTitleStyle}>\r\n        {title}\r\n      </div>\r\n      <AuthInput length={length} onChange={onChange} password />\r\n      {error && (\r\n        <div className=\"error\" style={customErrorStyle}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  text-align: center;\r\n  margin-bottom: 50px;\r\n  & > div {\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font40};\r\n    &:first-of-type {\r\n      color: ${(props) => props.theme.fontColor};\r\n    }\r\n  }\r\n\r\n  & > button {\r\n    font-family: 'AppleB';\r\n    cursor: pointer;\r\n    width: 120px;\r\n    height: 38px;\r\n    color: ${ColorPalette.fureWhite};\r\n    background-color: ${ColorPalette.darkBlue};\r\n    font-size: ${fontPalette.font18};\r\n    border-radius: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const StyledLoginForm = styled.div`\r\n  margin-bottom: 67px;\r\n`;\r\n","import Button from 'components/Common/Button';\r\nimport Form from 'components/Common/Form';\r\nimport useLogin from 'hooks/Login/useLogin';\r\nimport AuthForm from 'components/Common/AuthForm';\r\nimport { StyledLoginForm, StyledTitle } from './Login.style';\r\n\r\nconst Login = () => {\r\n  const {\r\n    id,\r\n    pw,\r\n    idError,\r\n    pwError,\r\n    easyPwError,\r\n    isEasyLogin,\r\n    onChangeIdState,\r\n    onChangePwState,\r\n    onChnageEasyPwState,\r\n    onChangeEasyLogin,\r\n    onClickLoginBtn,\r\n  } = useLogin();\r\n\r\n  return (\r\n    <div>\r\n      <StyledTitle>\r\n        <div>로그인</div>\r\n        <button onClick={onChangeEasyLogin}>\r\n          {isEasyLogin ? '간편로그인' : '로그인'}\r\n        </button>\r\n      </StyledTitle>\r\n\r\n      {isEasyLogin ? (\r\n        <StyledLoginForm>\r\n          <Form\r\n            onChange={onChangeIdState}\r\n            title=\"아이디\"\r\n            placeholder=\"아이디를 입력해주세요\"\r\n            name=\"id\"\r\n            value={id}\r\n            error={idError}\r\n            customInputStyle={{ marginBottom: '4px' }}\r\n          />\r\n          <Form\r\n            onChange={onChangePwState}\r\n            title=\"비밀번호\"\r\n            type=\"password\"\r\n            placeholder=\"비밀번호를 입력해주세요\"\r\n            name=\"pw\"\r\n            value={pw}\r\n            error={pwError}\r\n            customInputStyle={{ marginBottom: '4px' }}\r\n          />\r\n        </StyledLoginForm>\r\n      ) : (\r\n        <AuthForm\r\n          title=\"간편비밀번호 6자리를 입력하세요\"\r\n          error={easyPwError}\r\n          onChange={onChnageEasyPwState}\r\n        />\r\n      )}\r\n      <Button children=\"로그인\" handleClick={onClickLoginBtn} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const StyledCard = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  width: 100vw;\r\n  overflow: hidden;\r\n  animation: slide 10s linear infinite;\r\n  .Cards {\r\n    background: url('https://user-images.githubusercontent.com/62810965/136688366-e1f5ec9e-386c-4e29-97dc-786e30105fe2.png');\r\n    width: 100%;\r\n    height: 250px;\r\n    background-size: 2300px 250px;\r\n    animation: slide 30s linear infinite;\r\n  }\r\n\r\n  @keyframes slide {\r\n    0% {\r\n      background-position: 0px 0px;\r\n    }\r\n    100% {\r\n      background-position: -2300px 0px;\r\n    }\r\n  }\r\n`;\r\n","import { StyledCard } from './Card.style';\r\n\r\nconst Card = () => {\r\n  return (\r\n    <StyledCard>\r\n      <span className=\"Cards\" />\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport PageTemplate from 'components/Common/Base/PageTemplate';\r\nimport Login from 'components/Login';\r\nimport Card from 'components/Login/Card';\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <>\r\n      <PageTemplate\r\n        isLoadInfo={false}\r\n        isHeader\r\n        path=\"/\"\r\n        isFooter={false}\r\n        isLogout={false}\r\n      >\r\n        <Login />\r\n      </PageTemplate>\r\n      <Card />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","const makeMoneyComma = (money: string | number) => {\r\n  if (typeof money === 'string') {\r\n    return money.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  } else {\r\n    return money.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  }\r\n};\r\n\r\nexport default makeMoneyComma;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledCard = styled.div`\r\n  width: 100%;\r\n  height: 154px;\r\n  padding: 16px;\r\n  background-color: ${ColorPalette.skyBlue};\r\n  border-radius: 10px;\r\n  box-shadow: 2px 4px 5px rgba(0, 0, 0, 0.25);\r\n  margin-bottom: 27px;\r\n  cursor: pointer;\r\n  .title {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: start;\r\n    .company {\r\n      font-family: 'AppleB';\r\n      font-size: ${fontPalette.font20};\r\n      color: ${ColorPalette.fureWhite};\r\n    }\r\n    .number {\r\n      font-family: 'AppleB';\r\n      font-size: ${fontPalette.font14};\r\n      color: ${ColorPalette.fureWhite};\r\n    }\r\n  }\r\n  .money {\r\n    font-family: 'AppleEB';\r\n    font-size: ${fontPalette.font28};\r\n    color: ${ColorPalette.fureWhite};\r\n    font-weight: bold;\r\n  }\r\n\r\n  .won {\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font28};\r\n    color: ${ColorPalette.fureWhite};\r\n  }\r\n`;\r\n","import useLink from 'hooks/Common/useLink';\r\nimport makeMoneyComma from 'util/makeMoneyComma';\r\nimport { removeHyphen } from 'util/removeHyphen';\r\nimport { StyledCard } from './Card.style';\r\n\r\ninterface ICardProps {\r\n  company: string;\r\n  number: string;\r\n  money: string;\r\n}\r\n\r\nconst Card = ({ company, number, money }: ICardProps) => {\r\n  const { handleLink: pushDetailCard } = useLink(\r\n    `/detailcard/?number=${removeHyphen(number)}`,\r\n  );\r\n\r\n  return (\r\n    <StyledCard onClick={pushDetailCard}>\r\n      <div className=\"title\">\r\n        <div className=\"company\">{company}</div>\r\n        <div className=\"number\">{number}</div>\r\n      </div>\r\n      <span className=\"money\">{makeMoneyComma(money)}</span>\r\n      <span className=\"won\"> 원</span>\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import {\r\n  IEstablishAccountDto,\r\n  IEstablishAccountResponse,\r\n  IGetAccountInfoResponse,\r\n  IGetMyAccountResponse,\r\n  IGetMyAllAccountResponse,\r\n  IGetPushRecordResponse,\r\n  IGetReceiveRecordResponse,\r\n  IMyAccountDto,\r\n  IMyAccountResponse,\r\n  IRecordDto,\r\n  IRemittanceDto,\r\n} from 'types/account/account.type';\r\nimport { customAxios } from 'lib/Axios';\r\nimport { IResponse } from 'types/response/response.type';\r\nimport { Url } from 'url';\r\n\r\nexport const handleEstablishAccount = async (\r\n  establishAccountDto: IEstablishAccountDto,\r\n): Promise<IEstablishAccountResponse> => {\r\n  const url: string = `/account`;\r\n  const { data } = await customAxios.post<IEstablishAccountResponse>(\r\n    url,\r\n    establishAccountDto,\r\n  );\r\n  return data;\r\n};\r\n\r\nexport const handleGetMyAccount = async (): Promise<IGetMyAccountResponse> => {\r\n  const url: string = `/account/find/my`;\r\n  const { data } = await customAxios.get<IGetMyAccountResponse>(url);\r\n  return data;\r\n};\r\n\r\nexport const handleGetAccountInfo = async (\r\n  number: string,\r\n): Promise<IGetAccountInfoResponse> => {\r\n  const url: string = `/account/find/id/${number}`;\r\n  const { data } = await customAxios.get<IGetAccountInfoResponse>(url);\r\n  return data;\r\n};\r\n\r\nexport const handleGetPushRecord = async (\r\n  pushRecordDto: IRecordDto,\r\n): Promise<IGetPushRecordResponse> => {\r\n  const url: string = `/remittance/record/send`;\r\n  const { data } = await customAxios.post<IGetPushRecordResponse>(\r\n    url,\r\n    pushRecordDto,\r\n  );\r\n  return data;\r\n};\r\n\r\nexport const handleGetReceiveRecord = async (\r\n  pushRecordDto: IRecordDto,\r\n): Promise<IGetReceiveRecordResponse> => {\r\n  const url: string = `/remittance/record/receive`;\r\n  const { data } = await customAxios.post<IGetReceiveRecordResponse>(\r\n    url,\r\n    pushRecordDto,\r\n  );\r\n  return data;\r\n};\r\n\r\nexport const handleRemittance = async (\r\n  remittanceDto: IRemittanceDto,\r\n): Promise<IResponse> => {\r\n  const url: string = `/remittance/send`;\r\n  const { data } = await customAxios.post<IResponse>(url, remittanceDto);\r\n  return data;\r\n};\r\n\r\nexport const handleGetMyAllAccount =\r\n  async (): Promise<IGetMyAllAccountResponse> => {\r\n    const url: string = `/account/my/all`;\r\n    const { data } = await customAxios.get<IGetMyAllAccountResponse>(url);\r\n    return data;\r\n  };\r\n\r\nexport const handleSetMyAccount = async (\r\n  accountIdDto: IMyAccountDto,\r\n): Promise<IMyAccountResponse> => {\r\n  const url: string = `/account/my`;\r\n  const { data } = await customAxios.post<IMyAccountResponse>(\r\n    url,\r\n    accountIdDto,\r\n  );\r\n  return data;\r\n};\r\n","import { atom } from 'recoil';\r\nimport { IAccount, IRecord } from 'types/account/account.type';\r\nimport { UOption } from 'types/common/common.type';\r\n\r\nexport const myCardState = atom<IAccount[]>({\r\n  key: 'myCardState',\r\n  default: [] as IAccount[],\r\n});\r\n\r\nexport const detailCardInfoState = atom<IAccount>({\r\n  key: 'detailCardInfoState',\r\n  default: { money: '', userPhone: '', accountId: '' },\r\n});\r\n\r\nexport const detailCardOptionState = atom<UOption>({\r\n  key: 'detailCardOptionState',\r\n  default: '과거순',\r\n});\r\n\r\nexport const detailCardRecordState = atom<IRecord[]>({\r\n  key: 'detailCardRecord',\r\n  default: [] as IRecord[],\r\n});\r\n\r\nexport const myAccountIdState = atom<string[]>({\r\n  key: 'myAccountIdState',\r\n  default: [] as string[],\r\n});\r\n","import useLink from 'hooks/Common/useLink';\r\nimport useTheme from 'hooks/Theme/useTheme';\r\nimport { handleGetMyAccount } from 'lib/api/account/account.api';\r\nimport Toast from 'lib/Toast';\r\nimport { CSSProperties, useMemo } from 'react';\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport { myAccountIdState, myCardState } from 'store/account';\r\nimport { userInfoState } from 'store/user';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { IAccount } from 'types/account/account.type';\r\n\r\nconst useMain = () => {\r\n  const userInfo = useRecoilValue(userInfoState);\r\n  const [myCard, setMyCard] = useRecoilState(myCardState);\r\n  const setAccountId = useSetRecoilState(myAccountIdState);\r\n  const { handleLink: pushAddCard } = useLink('/add/info');\r\n  const { handleLink: pushEstablish } = useLink('/establish/password');\r\n  const { handleLink: pushRemittance } = useLink('/remittance/getcard');\r\n  const { handleChangeTheme, currentTheme } = useTheme();\r\n\r\n  const customButtonStyle: CSSProperties = useMemo(() => {\r\n    return {\r\n      width: '210px',\r\n      backgroundColor: ColorPalette.main,\r\n      height: '60px',\r\n      color: '#000000',\r\n      boxShadow: '2px 4px 5px rgba(0, 0, 0, 0.25)',\r\n    };\r\n  }, []);\r\n\r\n  const darkThemeButtonStyle: CSSProperties = useMemo(() => {\r\n    return {\r\n      width: '210px',\r\n      height: '60px',\r\n    };\r\n  }, []);\r\n\r\n  const getMyAccount = async () => {\r\n    try {\r\n      const { data } = await handleGetMyAccount();\r\n      setMyAccountId(data);\r\n      setMyCard(data);\r\n    } catch (e: any) {\r\n      Toast.infoToast(e.response.data.message);\r\n    }\r\n  };\r\n\r\n  const setMyAccountId = (accounts: IAccount[]) => {\r\n    let accountArray: string[] = [];\r\n    accounts.forEach((account) => {\r\n      accountArray.push(account.accountId);\r\n    });\r\n    setAccountId(accountArray);\r\n  };\r\n\r\n  const onClickAddCard = () => {\r\n    sessionStorage.setItem('AddCard', 'getInfo');\r\n    pushAddCard();\r\n  };\r\n\r\n  const onClickEstablish = () => {\r\n    sessionStorage.setItem('EstablishCard', 'getPassword');\r\n    pushEstablish();\r\n  };\r\n\r\n  const onClickRemittance = () => {\r\n    sessionStorage.setItem('Remittance', 'getCard');\r\n    pushRemittance();\r\n  };\r\n\r\n  const resetStorage = () => {\r\n    sessionStorage.removeItem('AddCard');\r\n    sessionStorage.removeItem('Remittance');\r\n    sessionStorage.removeItem('EstablishCard');\r\n    sessionStorage.removeItem('Bring');\r\n  };\r\n\r\n  return {\r\n    customButtonStyle,\r\n    resetStorage,\r\n    onClickAddCard,\r\n    getMyAccount,\r\n    onClickRemittance,\r\n    onClickEstablish,\r\n    handleChangeTheme,\r\n    currentTheme,\r\n    darkThemeButtonStyle,\r\n    myCard,\r\n    userInfo,\r\n  };\r\n};\r\n\r\nexport default useMain;\r\n","const getCompany = (number: string) => {\r\n  const head: string = number.substring(0, 3);\r\n  let company: string = '';\r\n  switch (head) {\r\n    case '001':\r\n      company = '카카오뱅크';\r\n      break;\r\n    case '002':\r\n      company = '토스';\r\n      break;\r\n    case '003':\r\n      company = '신한카드';\r\n      break;\r\n    default:\r\n      company = '토스2';\r\n      break;\r\n  }\r\n  return company;\r\n};\r\n\r\nexport default getCompany;\r\n","const makeAccountNumber = (value: string) => {\r\n  return value\r\n    .replace(/[^0-9]/g, '')\r\n    .replace(/(\\d{3})(\\d{2})(\\d{7})/g, '$1-$2-$3')\r\n    .replace('--', '-');\r\n};\r\n\r\nexport default makeAccountNumber;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledAddCard = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  font-size: ${fontPalette.font40};\r\n  color: ${ColorPalette.darkGrey};\r\n  cursor: pointer;\r\n  background-color: ${ColorPalette.grey};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  border-radius: 10px;\r\n`;\r\n","import useMain from 'hooks/Main/useMain';\r\nimport { StyledAddCard } from './AddCard.style';\r\n\r\nconst AddCard = () => {\r\n  const { onClickAddCard } = useMain();\r\n  return <StyledAddCard onClick={onClickAddCard}>+</StyledAddCard>;\r\n};\r\n\r\nexport default AddCard;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledMainTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  align-items: center;\r\n  margin-bottom: 45px;\r\n\r\n  & > span {\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font24};\r\n    color: ${(props) => props.theme.fontColor}\r\n  }\r\n  & > button {\r\n    cursor: pointer;\r\n    font-family: 'AppleB';\r\n    width: 145px;\r\n    height: 45px;\r\n    border: none;\r\n    border-radius: 10px;\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    align-items: center;\r\n    font-size: ${fontPalette.font20};\r\n    background-color: ${ColorPalette.main};\r\n    color: ${ColorPalette.fureBlack};\r\n    box-shadow: 2px 4px 5px rgba(0, 0, 0, 0.25);\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n`;\r\n","import Button from 'components/Common/Button';\r\nimport Card from 'components/Main/Card';\r\nimport { ThemeEnum } from 'enum/ThemeEnum';\r\nimport useMain from 'hooks/Main/useMain';\r\nimport { useEffect } from 'react';\r\nimport { IAccount } from 'types/account/account.type';\r\nimport getCompany from 'util/getCompany';\r\nimport makeAccountNumber from 'util/makeAccountNumber';\r\nimport makeMoneyComma from 'util/makeMoneyComma';\r\nimport AddCard from './AddCard';\r\nimport { StyledButton, StyledMainTitle } from './Main.style';\r\n\r\nconst Main = () => {\r\n  const {\r\n    customButtonStyle,\r\n    onClickEstablish,\r\n    resetStorage,\r\n    handleChangeTheme,\r\n    currentTheme,\r\n    onClickRemittance,\r\n    myCard,\r\n    getMyAccount,\r\n    darkThemeButtonStyle,\r\n    userInfo,\r\n  } = useMain();\r\n\r\n  useEffect(() => {\r\n    resetStorage();\r\n    getMyAccount();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <StyledMainTitle>\r\n        <span>{userInfo && userInfo.name}</span>\r\n        <button onClick={onClickEstablish}>계좌개설</button>\r\n      </StyledMainTitle>\r\n      <StyledButton>\r\n        <Button\r\n          children=\"송금\"\r\n          customStyle={customButtonStyle}\r\n          handleClick={onClickRemittance}\r\n        />\r\n        <Button\r\n          children={currentTheme === ThemeEnum.DARK ? '라이트모드' : '다크모드'}\r\n          customStyle={\r\n            currentTheme === ThemeEnum.DARK\r\n              ? customButtonStyle\r\n              : darkThemeButtonStyle\r\n          }\r\n          handleClick={handleChangeTheme}\r\n        />\r\n      </StyledButton>\r\n      {myCard &&\r\n        myCard.map((card: IAccount) => {\r\n          return (\r\n            <Card\r\n              key={card.accountId}\r\n              company={getCompany(card.accountId)}\r\n              number={makeAccountNumber(card.accountId)}\r\n              money={makeMoneyComma(card.money)}\r\n            />\r\n          );\r\n        })}\r\n      <AddCard />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import PageTemplate from 'components/Common/Base/PageTemplate';\r\nimport Main from 'components/Main';\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <PageTemplate isHeader isFooter isLogout>\r\n      <Main />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import useLink from 'hooks/Common/useLink';\r\nimport { handleEasyRegister } from 'lib/api/auth/auth.api';\r\nimport Toast from 'lib/Toast';\r\nimport Token from 'lib/Token';\r\nimport { CSSProperties, useMemo, useState } from 'react';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\n\r\nconst usePassword = () => {\r\n  const [password, setPassword] = useState<string>('');\r\n  const [passwordError, setPasswordError] = useState<string>('');\r\n  const { handleLink: pushMain } = useLink('/main');\r\n\r\n  const onChangePassword = (value: string) => {\r\n    setPassword(value);\r\n    checkPasswordError(value);\r\n  };\r\n\r\n  const checkPasswordError = (value: string) => {\r\n    if (value.length < 6) {\r\n      setPasswordError('비밀번호를 제대로 입력해주세요');\r\n    } else {\r\n      setPasswordError('');\r\n    }\r\n  };\r\n\r\n  const onClickNext = () => {\r\n    if (password.length === 6 && passwordError === '') {\r\n      easyRegister();\r\n    } else {\r\n      Toast.infoToast('비밀번호를 제대로 입력해주세요');\r\n    }\r\n  };\r\n\r\n  const easyRegister = async () => {\r\n    try {\r\n      const req = { key: password };\r\n      const { data } = await handleEasyRegister(req);\r\n      setEasyToken(data);\r\n      Toast.successToast('간편로그인 설정 성공');\r\n      pushMain();\r\n    } catch (e: any) {\r\n      Toast.errorToast(e.response.data.message);\r\n    }\r\n  };\r\n\r\n  const setEasyToken = (token: string) => {\r\n    Token.setToken('easyToken', token, 'cookie');\r\n  };\r\n\r\n  const customButtonStyle: CSSProperties = useMemo(() => {\r\n    return {\r\n      backgroundColor: ColorPalette.main,\r\n      color: ColorPalette.fureBlack,\r\n      marginTop: '65px',\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    onChangePassword,\r\n    passwordError,\r\n    customButtonStyle,\r\n    onClickNext,\r\n  };\r\n};\r\n\r\nexport default usePassword;\r\n","import styled from '@emotion/styled';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledTitle = styled.div`\r\n  font-family: 'AppleB';\r\n  font-size: ${fontPalette.font28};\r\n  color:  ${(props) => props.theme.fontColor};\r\n  text-align: start;\r\n  margin-bottom: 70px;\r\n`;\r\n","import React from 'react';\r\nimport AuthForm from 'components/Common/AuthForm';\r\nimport Button from 'components/Common/Button';\r\nimport usePassword from 'hooks/Password/usePassword';\r\nimport { StyledTitle } from './Password.style';\r\nconst Password = (): JSX.Element => {\r\n  const { onChangePassword, customButtonStyle, passwordError, onClickNext } =\r\n    usePassword();\r\n  return (\r\n    <>\r\n      <StyledTitle>간편비밀번호 설정</StyledTitle>\r\n      <AuthForm\r\n        title=\"간편비밀번호 6자리를 입력해주세요\"\r\n        error={passwordError}\r\n        onChange={onChangePassword}\r\n      />\r\n      <Button\r\n        handleClick={onClickNext}\r\n        children=\"설정\"\r\n        customStyle={customButtonStyle}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n","import PageTemplate from 'components/Common/Base/PageTemplate';\r\nimport Password from 'components/Password';\r\n\r\nconst PasswordPage = (): JSX.Element => {\r\n  return (\r\n    <PageTemplate isHeader isFooter={false} isLogout={false}>\r\n      <Password />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default PasswordPage;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\nimport { URecord } from 'types/common/common.type';\r\n\r\ninterface IMoneyProps {\r\n  type: URecord;\r\n}\r\n\r\nexport const StyledCardHistory = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  height: 80px;\r\n  padding: 16px;\r\n  border-bottom: solid 1.5px ${ColorPalette.grey};\r\n`;\r\n\r\nexport const StyledMoney = styled.div<IMoneyProps>`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  text-align: end;\r\n  align-items: center;\r\n  font-family: 'AppleB';\r\n  font-size: ${fontPalette.font24};\r\n  color: ${(props) =>\r\n    props.type === 'push' ? props.theme.fontColor : ColorPalette.darkBlue};\r\n  font-weight: bold;\r\n  .won {\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font24};\r\n    color: ${(props) =>\r\n      props.type === 'push' ? props.theme.fontColor : ColorPalette.darkBlue};\r\n    margin-left: 4px;\r\n    font-weight: normal;\r\n  }\r\n`;\r\n\r\nexport const StyledInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding-top: 4px;\r\n  .date {\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font16};\r\n    color: ${ColorPalette.darkGrey};\r\n    margin-right: 20px;\r\n  }\r\n  .account {\r\n    font-size: ${fontPalette.font16};\r\n    color: ${(props) => props.theme.fontColor};\r\n  }\r\n`;\r\n\r\nexport const StyledHistoryOption = styled.div`\r\n  color: ${ColorPalette.darkBlue};\r\n  margin: 16px 0px;\r\n  font-weight: bold;\r\n  text-align: end;\r\n  padding-right: 16px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const StyledCardHistoryWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-top: solid 2px ${ColorPalette.darkGrey};\r\n  overflow-y: scroll;\r\n  max-height: calc(100vh - 580px);\r\n`;\r\n","const makeDate = (date: string):string => {\r\n  const head = date.substring(5,7);\r\n  const tail = date.substring(8,10);\r\n  return `${head}.${tail}`;\r\n}\r\n\r\nexport default makeDate;","import { URecord } from 'types/common/common.type';\r\nimport makeDate from 'util/makeDate';\r\nimport {\r\n  StyledCardHistory,\r\n  StyledInfo,\r\n  StyledMoney,\r\n} from './CardHistory.style';\r\n\r\ninterface ICardHistoryProps {\r\n  date: string;\r\n  account: string;\r\n  money: string;\r\n  type: URecord;\r\n}\r\n\r\nconst CardHistory = ({\r\n  account,\r\n  date,\r\n  money,\r\n  type,\r\n}: ICardHistoryProps): JSX.Element => {\r\n  return (\r\n    <StyledCardHistory>\r\n      <StyledInfo>\r\n        <div className=\"date\">{makeDate(date)}</div>\r\n        <div className=\"account\">{account}</div>\r\n      </StyledInfo>\r\n\r\n      <StyledMoney type={type}>\r\n        {type === 'receive' ? money : `-${money}`}\r\n        <span className=\"won\"> 원</span>\r\n      </StyledMoney>\r\n    </StyledCardHistory>\r\n  );\r\n};\r\n\r\nexport default CardHistory;\r\n","import { useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\nconst useQueryString = () => {\r\n  const { search } = useLocation();\r\n  const query = queryString.parse(search);\r\n\r\n  return query;\r\n};\r\n\r\nexport default useQueryString;\r\n","import useLink from 'hooks/Common/useLink';\r\nimport useQueryString from 'hooks/Common/useQueryString';\r\nimport {\r\n  handleGetAccountInfo,\r\n  handleGetPushRecord,\r\n  handleGetReceiveRecord,\r\n} from 'lib/api/account/account.api';\r\nimport Toast from 'lib/Toast';\r\nimport { CSSProperties, useMemo } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport {\r\n  detailCardInfoState,\r\n  detailCardOptionState,\r\n  detailCardRecordState,\r\n} from 'store/account';\r\nimport {\r\n  IPushRecord,\r\n  IReceiveRecord,\r\n  IRecord,\r\n} from 'types/account/account.type';\r\nimport makeAccountNumber from 'util/makeAccountNumber';\r\nimport makeMoneyComma from 'util/makeMoneyComma';\r\n\r\nconst useDetailCard = () => {\r\n  const { number } = useQueryString();\r\n  const { handleLink: pushBring } = useLink('/bring/getcard');\r\n  const [record, setRecord] = useRecoilState(detailCardRecordState);\r\n  const [option, setOption] = useRecoilState(detailCardOptionState);\r\n  const [card, setCard] = useRecoilState(detailCardInfoState);\r\n\r\n  const customBringButtonStyle: CSSProperties = useMemo(() => {\r\n    return {\r\n      width: '100%',\r\n      height: '60px',\r\n      zIndex: 9,\r\n      marginBottom: '16px',\r\n    };\r\n  }, []);\r\n\r\n  const getAccountInfo = async () => {\r\n    try {\r\n      const { data } = await handleGetAccountInfo(number as string);\r\n      setCard(data);\r\n    } catch (e: any) {\r\n      Toast.errorToast(e.response.data.message);\r\n    }\r\n  };\r\n\r\n  const onClickBring = () => {\r\n    sessionStorage.setItem('Bring', 'getCard');\r\n    pushBring();\r\n  };\r\n\r\n  const getPushRemittanceRecord = async () => {\r\n    try {\r\n      const req = { accountId: number as string };\r\n      const { data } = await handleGetPushRecord(req);\r\n      return data;\r\n    } catch (e: any) {\r\n      Toast.errorToast(e.response.data.message);\r\n    }\r\n  };\r\n\r\n  const getReceiveRemittanceRecord = async () => {\r\n    try {\r\n      const req = { accountId: number as string };\r\n      const { data } = await handleGetReceiveRecord(req);\r\n      return data;\r\n    } catch (e: any) {\r\n      Toast.errorToast(e.response.data.message);\r\n    }\r\n  };\r\n\r\n  const handleRecord = ({\r\n    push,\r\n    receive,\r\n  }: {\r\n    push: IPushRecord[];\r\n    receive: IReceiveRecord[];\r\n  }) => {\r\n    const recordArr: IRecord[] = [];\r\n\r\n    push &&\r\n      push.forEach((record: IPushRecord) => {\r\n        recordArr.push({\r\n          account: makeAccountNumber(record.reciverId),\r\n          money: makeMoneyComma(record.money),\r\n          type: 'push',\r\n          date: record.createdAt,\r\n        });\r\n      });\r\n\r\n    receive &&\r\n      receive.forEach((record: IReceiveRecord) => {\r\n        recordArr.push({\r\n          account: makeAccountNumber(record.senderId),\r\n          money: makeMoneyComma(record.money),\r\n          type: 'receive',\r\n          date: record.createdAt,\r\n        });\r\n      });\r\n\r\n    setRecord(recordArr);\r\n  };\r\n\r\n  const loadRecord = async () => {\r\n    const push = await getPushRemittanceRecord();\r\n    const receive = await getReceiveRemittanceRecord();\r\n    if (push && receive) {\r\n      handleRecord({ push, receive });\r\n    }\r\n  };\r\n\r\n  const setRecordNewest = () => {\r\n    record &&\r\n      setRecord(\r\n        [...record].sort((a, b) => {\r\n          if (a.date < b.date) {\r\n            return -1;\r\n          } else if (a.date > b.date) {\r\n            return 1;\r\n          } else {\r\n            return 0;\r\n          }\r\n        }),\r\n      );\r\n  };\r\n\r\n  const setRecordOldest = () => {\r\n    record &&\r\n      setRecord(\r\n        [...record].sort((a, b) => {\r\n          if (a.date > b.date) {\r\n            return -1;\r\n          } else if (a.date < b.date) {\r\n            return 1;\r\n          } else {\r\n            return 0;\r\n          }\r\n        }),\r\n      );\r\n  };\r\n\r\n  const onClickOption = () => {\r\n    if (option === '최신순') {\r\n      setOption('과거순');\r\n      setRecordOldest();\r\n    } else {\r\n      setOption('최신순');\r\n      setRecordNewest();\r\n    }\r\n  };\r\n\r\n  return {\r\n    onClickBring,\r\n    customBringButtonStyle,\r\n    number,\r\n    getAccountInfo,\r\n    setRecordNewest,\r\n    onClickOption,\r\n    option,\r\n    loadRecord,\r\n    card,\r\n    setRecordOldest,\r\n    record,\r\n  };\r\n};\r\n\r\nexport default useDetailCard;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledTopBackground = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100vw;\r\n  height: 446px;\r\n  background-color: ${ColorPalette.skyBlue};\r\n  z-index: 0;\r\n`;\r\n\r\nexport const StyledTopWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  align-items: center;\r\n  height: 446px;\r\n`;\r\n\r\nexport const StyledTitle = styled.div`\r\n  display: flex;\r\n  margin-top: 16px;\r\n  flex-direction: column;\r\n\r\n  .company {\r\n    z-index: 9;\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font24};\r\n    color: ${ColorPalette.fureWhite};\r\n    margin-bottom: 7px;\r\n  }\r\n  .number {\r\n    z-index: 9;\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font24};\r\n    color: ${ColorPalette.fureWhite};\r\n    text-decoration-line: underline;\r\n    text-underline-offset: 2px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const StyledMoney = styled.div`\r\n  z-index: 9;\r\n  font-family: 'AppleEB';\r\n  font-size: ${fontPalette.font48};\r\n  color: ${ColorPalette.fureWhite};\r\n  font-weight: bold;\r\n  .won {\r\n    z-index: 9;\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font40};\r\n    color: ${ColorPalette.fureWhite};\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.div`\r\n  z-index: 9;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  align-items: center;\r\n  margin-bottom: 31px;\r\n  width: 100%;\r\n`;\r\n","import {\r\n  StyledCardHistoryWrapper,\r\n  StyledHistoryOption,\r\n} from './CardHistory/CardHistory.style';\r\nimport React, { useEffect } from 'react';\r\nimport CardHistory from './CardHistory';\r\nimport Button from 'components/Common/Button';\r\nimport useDetailCard from 'hooks/DetailCard/useDetailCard';\r\nimport { StyledMoney, StyledTitle, StyledTopWrapper } from './DetailCard.style';\r\nimport makeAccountNumber from 'util/makeAccountNumber';\r\nimport getCompany from 'util/getCompany';\r\nimport makeMoneyComma from 'util/makeMoneyComma';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\n\r\nconst DetailCard = (): JSX.Element => {\r\n  const {\r\n    onClickBring,\r\n    loadRecord,\r\n    onClickOption,\r\n    option,\r\n    customBringButtonStyle,\r\n    number,\r\n    record,\r\n    getAccountInfo,\r\n    card,\r\n  } = useDetailCard();\r\n\r\n  useEffect(() => {\r\n    getAccountInfo();\r\n    loadRecord();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <StyledTopWrapper>\r\n        <StyledTitle>\r\n          <div className=\"company\">{getCompany(number as string)}</div>\r\n          <CopyToClipboard text={number as string}>\r\n            <div className=\"number\">{makeAccountNumber(number as string)}</div>\r\n          </CopyToClipboard>\r\n        </StyledTitle>\r\n        <StyledMoney>\r\n          {makeMoneyComma(card.money)}\r\n          <span className=\"won\"> 원</span>\r\n        </StyledMoney>\r\n        <Button\r\n          children=\"가져오기\"\r\n          customStyle={customBringButtonStyle}\r\n          handleClick={onClickBring}\r\n        />\r\n      </StyledTopWrapper>\r\n      <StyledHistoryOption onClick={onClickOption}>\r\n        {option}\r\n      </StyledHistoryOption>\r\n      <StyledCardHistoryWrapper>\r\n        {record &&\r\n          record.map((v, i) => {\r\n            return (\r\n              <CardHistory\r\n                account={v.account}\r\n                money={v.money}\r\n                type={v.type}\r\n                date={v.date}\r\n                key={i}\r\n              />\r\n            );\r\n          })}\r\n      </StyledCardHistoryWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailCard;\r\n","import React from 'react';\r\nimport DetailCard from 'components/DetailCard';\r\nimport { StyledTopBackground } from 'components/DetailCard/DetailCard.style';\r\nimport PageTemplate from 'components/Common/Base/PageTemplate';\r\n\r\nconst DetailCardPage = (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <PageTemplate isHeader={false} isFooter={false} isLogout={false}>\r\n        <DetailCard />\r\n      </PageTemplate>\r\n      <StyledTopBackground />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailCardPage;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  align-items: center;\r\n  margin-bottom: 42px;\r\n  & > div {\r\n    font-family: 'AppleEB';\r\n    font-size: ${fontPalette.font24};\r\n    color:  ${(props) => props.theme.fontColor}\r\n  }\r\n  & > button {\r\n    font-family: 'AppleB';\r\n    width: 100px;\r\n    height: 36px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    color: ${ColorPalette.fureBlack};\r\n    font-size: ${fontPalette.font16};\r\n    background-color: ${ColorPalette.main};\r\n    border: none;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const StyledContentWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledContent = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  .property {\r\n    padding-left: 24px;\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font20};\r\n    color:  ${(props) => props.theme.fontColor};\r\n  }\r\n  .content {\r\n    position: absolute;\r\n    padding-left: 145px;\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font20};\r\n    color:  ${(props) => props.theme.fontColor};\r\n  }\r\n`;\r\n","import { useRecoilValue } from 'recoil';\r\nimport { userInfoState } from 'store/user';\r\nimport makeBirth from 'util/makeBirth';\r\nimport makePhoneNumber from 'util/makePhoneNumber';\r\nimport { StyledContent, StyledContentWrap, StyledTitle } from './Profile.style';\r\n\r\nconst Profile = (): JSX.Element => {\r\n  const userInfo = useRecoilValue(userInfoState);\r\n  return (\r\n    <div>\r\n      <StyledTitle>\r\n        <div>내 정보</div>\r\n        {/* <button>수정하기</button> */}\r\n      </StyledTitle>\r\n      <StyledContentWrap>\r\n        <StyledContent>\r\n          <div className=\"property\">이름: </div>\r\n          <div className=\"content\">{userInfo.name && userInfo.name}</div>\r\n        </StyledContent>\r\n        <StyledContent>\r\n          <div className=\"property\">아이디: </div>\r\n          <div className=\"content\">{userInfo.id && userInfo.id}</div>\r\n        </StyledContent>\r\n        <StyledContent>\r\n          <div className=\"property\">전화번호: </div>\r\n          <div className=\"content\">\r\n            {userInfo.phone && makePhoneNumber(userInfo.phone)}\r\n          </div>\r\n        </StyledContent>\r\n        <StyledContent>\r\n          <div className=\"property\">생년월일: </div>\r\n          <div className=\"content\">\r\n            {userInfo.birth && makeBirth(userInfo.birth)}\r\n          </div>\r\n        </StyledContent>\r\n      </StyledContentWrap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import PageTemplate from 'components/Common/Base/PageTemplate';\r\nimport Profile from 'components/Profile';\r\n\r\nconst ProfilePage = (): JSX.Element => {\r\n  return (\r\n    <PageTemplate isHeader isFooter isLogout>\r\n      <Profile />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;","import styled from '@emotion/styled';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledTitle = styled.div`\r\n  font-size: ${fontPalette.font28};\r\n  font-family: 'AppleB';\r\n`;\r\n","import Button from 'components/Common/Button';\r\nimport useLink from 'hooks/Common/useLink';\r\nimport { StyledTitle } from './Notfound.style';\r\n\r\nconst Notfound = (): JSX.Element => {\r\n  const { handleLink: pushMain } = useLink('/main');\r\n  return (\r\n    <StyledTitle>\r\n      잘못된 접근입니다\r\n      <br />\r\n      메인으로 돌아가세요\r\n      <Button\r\n        children=\"돌아가기\"\r\n        handleClick={pushMain}\r\n        customStyle={{ marginTop: '80px' }}\r\n      />\r\n    </StyledTitle>\r\n  );\r\n};\r\n\r\nexport default Notfound;\r\n","import PageTemplate from 'components/Common/Base/PageTemplate';\r\nimport Notfound from 'components/Notfound';\r\n\r\nconst NotfoundPage = (): JSX.Element => {\r\n  return (\r\n    <PageTemplate isHeader isFooter={false} isLogout={false} isLoadInfo={false}  >\r\n      <Notfound />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default NotfoundPage;\r\n","import styled from '@emotion/styled';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledTitle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: start;\r\n  margin-bottom: 55px;\r\n  & > div {\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font28};\r\n    color: ${(props) => props.theme.fontColor};\r\n  }\r\n`;\r\n","import { atom } from 'recoil';\r\nimport { IOtherAccount } from 'types/account/account.type';\r\n\r\nexport const phoneState = atom<string>({\r\n  key: 'phoneState',\r\n  default: '',\r\n});\r\n\r\nexport const setCardState = atom<IOtherAccount[]>({\r\n  key: 'setCardState',\r\n  default: [] as IOtherAccount[],\r\n});\r\n\r\nexport const selectCardState = atom<string[]>({\r\n  key: 'selectCardState',\r\n  default: [] as string[],\r\n});\r\n","class addAccountValidation {\r\n  public static checkEmpty = (value: string) => {\r\n    if (value.length < 13 || value === null || value === undefined) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n}\r\n\r\nexport default addAccountValidation;\r\n","var _circle, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCheck(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 50,\n    height: 50,\n    viewBox: \"0 0 50 50\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 25,\n    cy: 25,\n    r: 25,\n    fill: \"#FFDC00\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.1901 33.634C21.961 33.8689 21.6484 34 21.3237 34C20.999 34 20.6865 33.8689 20.4574 33.634L13.5385 26.5787C12.8205 25.8467 12.8205 24.6596 13.5385 23.9289L14.4049 23.0454C15.1231 22.3133 16.2861 22.3133 17.0041 23.0454L21.3237 27.4496L32.9959 15.549C33.7141 14.817 34.8782 14.817 35.5951 15.549L36.4615 16.4326C37.1795 17.1646 37.1795 18.3515 36.4615 19.0824L22.1901 33.634Z\",\n    fill: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheck);\nexport default __webpack_public_path__ + \"static/media/check.929453c1.svg\";\nexport { ForwardRef as ReactComponent };","import useLink from 'hooks/Common/useLink';\r\nimport {\r\n  handleGetMyAccount,\r\n  handleGetMyAllAccount,\r\n  handleSetMyAccount,\r\n} from 'lib/api/account/account.api';\r\nimport Toast from 'lib/Toast';\r\nimport { ChangeEvent, CSSProperties, useMemo, useState } from 'react';\r\nimport { useRecoilState, useRecoilValue, useResetRecoilState } from 'recoil';\r\nimport { myAccountIdState } from 'store/account';\r\nimport { phoneState, selectCardState, setCardState } from 'store/addAccount';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { IMyAccountDto, IOtherAccount } from 'types/account/account.type';\r\nimport makePhoneNumber from 'util/makePhoneNumber';\r\nimport addAccountValidation from 'validation/addAccount.validation';\r\n\r\nconst useAddAccount = () => {\r\n  const { handleLink: pushNext } = useLink('/add/card');\r\n  const { handleLink: pushMain } = useLink('/main');\r\n  const [phone, setPhone] = useRecoilState<string>(phoneState);\r\n  const [phoneError, setPhoneError] = useState<string>('');\r\n  const [card, setCard] = useRecoilState<IOtherAccount[]>(setCardState);\r\n  const [selectCard, setSelectCard] = useRecoilState<string[]>(selectCardState);\r\n  const accountId = useRecoilValue(myAccountIdState);\r\n\r\n  const onResetPhone = () => {\r\n    setPhone('');\r\n    setPhoneError('');\r\n  };\r\n\r\n  const getMyAllAccount = async () => {\r\n    try {\r\n      const { data } = await handleGetMyAllAccount();\r\n      const unDuplicatedAccountId = await getUnDuplicatedAccountId(data);\r\n      unDuplicatedAccountId && setCard(unDuplicatedAccountId);\r\n    } catch (e: any) {\r\n      Toast.errorToast(e.response.data.message);\r\n    }\r\n  };\r\n\r\n  const getUnDuplicatedAccountId = async (accounts: IOtherAccount[]) => {\r\n    try {\r\n      const { data } = await handleGetMyAccount();\r\n      let myAccount: string[] = [];\r\n      data.forEach((v) => {\r\n        myAccount.push(v.accountId);\r\n      });\r\n      let unDuplicatedAccountId: IOtherAccount[] = [];\r\n      accounts.forEach((account) => {\r\n        if (!myAccount.includes(account.accountId)) {\r\n          const info = {\r\n            accountId: account.accountId,\r\n            name: account.name,\r\n            phone: account.phone,\r\n          };\r\n          unDuplicatedAccountId.push(info);\r\n        }\r\n      });\r\n      return unDuplicatedAccountId;\r\n    } catch (e: any) {\r\n      Toast.errorToast(e.response.data.message);\r\n    }\r\n  };\r\n\r\n  const onChangePhone = (e: ChangeEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    setPhone(makePhoneNumber(e.target.value));\r\n    checkPhone(e.target.value);\r\n  };\r\n\r\n  const customButtonStyle: CSSProperties = useMemo(() => {\r\n    return {\r\n      backgroundColor: ColorPalette.main,\r\n      color: ColorPalette.fureBlack,\r\n      marginTop: '65px',\r\n    };\r\n  }, []);\r\n\r\n  const checkPhone = (value: string) => {\r\n    if (value.length < 13) {\r\n      setPhoneError('전화번호를 제대로 입력해주세요');\r\n    } else {\r\n      setPhoneError('');\r\n    }\r\n  };\r\n\r\n  const onClickFind = () => {\r\n    if (addAccountValidation.checkEmpty(phone)) {\r\n      sessionStorage.setItem('AddCard', 'setCard');\r\n      pushNext();\r\n    }\r\n  };\r\n\r\n  const checkGetInfo = () => {\r\n    if (sessionStorage.getItem('AddCard') !== 'getInfo') {\r\n      Toast.errorToast('비정상적인 접근입니다.');\r\n      pushMain();\r\n    }\r\n  };\r\n\r\n  const checkSetCard = () => {\r\n    if (sessionStorage.getItem('AddCard') !== 'setCard') {\r\n      Toast.errorToast('비정상적인 접근입니다.');\r\n      pushMain();\r\n    }\r\n  };\r\n\r\n  const onClickSetCard = async () => {\r\n    if (selectCard.length > 0) {\r\n      await postAccount().then(() => {\r\n        Toast.successToast(`${selectCard.length}개의 카드를 등록했습니다.`);\r\n        sessionStorage.removeItem('AddCard');\r\n        pushMain();\r\n      });\r\n    } else {\r\n      Toast.infoToast(`카드를 선택해주세요!`);\r\n    }\r\n  };\r\n\r\n  const postAccount = async () => {\r\n    try {\r\n      let info: IMyAccountDto = {\r\n        accounts: [],\r\n      };\r\n      selectCard.forEach((ac) => {\r\n        info.accounts.push({ accountName: '', accountId: ac });\r\n      });\r\n      await handleSetMyAccount(info);\r\n    } catch (e: any) {\r\n      Toast.errorToast(e.response.data.message);\r\n    }\r\n  };\r\n\r\n  const setCardCheck = ({\r\n    check,\r\n    number,\r\n  }: {\r\n    check: boolean;\r\n    number: string;\r\n  }) => {\r\n    if (check) {\r\n      setSelectCard((prev) => [...prev, number]);\r\n    } else {\r\n      setSelectCard(selectCard.filter((v) => v !== number));\r\n    }\r\n  };\r\n\r\n  return {\r\n    phoneError,\r\n    onClickSetCard,\r\n    onChangePhone,\r\n    phone,\r\n    onClickFind,\r\n    selectCard,\r\n    customButtonStyle,\r\n    checkGetInfo,\r\n    checkSetCard,\r\n    card,\r\n    setCardCheck,\r\n    onResetPhone,\r\n    setCard,\r\n    getMyAllAccount,\r\n  };\r\n};\r\n\r\nexport default useAddAccount;\r\n","import React, { useEffect } from 'react';\r\nimport Form from 'components/Common/Form';\r\nimport { StyledTitle } from './AddAccountGetInfo.style';\r\nimport useAddAccount from 'hooks/AddAccount/useAddAccount';\r\nimport Button from 'components/Common/Button';\r\n\r\nconst AddAccountGetInfo = (): JSX.Element => {\r\n  const {\r\n    phoneError,\r\n    customButtonStyle,\r\n    onChangePhone,\r\n    onClickFind,\r\n    phone,\r\n    onResetPhone,\r\n    checkGetInfo,\r\n  } = useAddAccount();\r\n\r\n  useEffect(() => {\r\n    checkGetInfo();\r\n  }, [checkGetInfo]);\r\n\r\n  useEffect(() => {\r\n    onResetPhone();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <StyledTitle>\r\n        <div>본인 및 계좌정보를 확인하기 위해</div>\r\n        <div>전화번호를 입력해주세요</div>\r\n      </StyledTitle>\r\n      <Form\r\n        title=\"전화번호\"\r\n        error={phoneError}\r\n        value={phone}\r\n        onChange={onChangePhone}\r\n        name=\"phone\"\r\n        placeholder=\"전화번호를 입력해주세요 ex) 010-9088-2512\"\r\n        maxLength={13}\r\n        customInputStyle={{marginBottom: \"8px\"}}\r\n      />\r\n      <Button\r\n        children=\"조회하기\"\r\n        handleClick={onClickFind}\r\n        customStyle={customButtonStyle}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddAccountGetInfo;\r\n","import AddAccountGetInfo from 'components/AddAccountGetInfo';\r\nimport PageTemplate from 'components/Common/Base/PageTemplate';\r\n\r\nconst AddAccountGetInfoPage = (): JSX.Element => {\r\n  return (\r\n    <PageTemplate isFooter={false} isHeader isLogout={false}>\r\n      <AddAccountGetInfo />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default AddAccountGetInfoPage;\r\n","import styled from '@emotion/styled';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledTitle = styled.div`\r\n  text-align: start;\r\n  margin-bottom: 45px;\r\n  & > div {\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font28};\r\n    color:  ${(props) => props.theme.fontColor};\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\ninterface IStyledCardProps {\r\n  check: boolean;\r\n}\r\n\r\nexport const StyledCard = styled.div<IStyledCardProps>`\r\n  position: relative;\r\n  cursor: pointer;\r\n  background-color: ${ColorPalette.skyBlue};\r\n  border: none;\r\n  border-radius: 10px;\r\n  margin-bottom: 20px;\r\n  padding: 16px;\r\n  width: 100%;\r\n  height: 154px;\r\n  .info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: start;\r\n    .company {\r\n      font-family: 'AppleB';\r\n      font-size: ${fontPalette.font20};\r\n      color: ${ColorPalette.fureWhite};\r\n    }\r\n    .number {\r\n      font-family: 'AppleB';\r\n      font-size: ${fontPalette.font14};\r\n      color: ${ColorPalette.fureWhite};\r\n    }\r\n  }\r\n\r\n  .money {\r\n    font-family: 'AppleEB';\r\n    font-size: ${fontPalette.font28};\r\n    color: ${ColorPalette.fureWhite};\r\n    font-weight: bold;\r\n    .won {\r\n      font-family: 'AppleB';\r\n      font-size: ${fontPalette.font24};\r\n      color: ${ColorPalette.fureWhite};\r\n      font-weight: normal;\r\n    }\r\n  }\r\n\r\n  .checkBackground {\r\n    display: flex;\r\n    opacity: ${(props) => (props.check ? 1 : 0)};\r\n    transition: 0.4s ease-in-out;\r\n    display: flex;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: none;\r\n    border-radius: 10px;\r\n    background-color: ${ColorPalette.darkGrey}95;\r\n    top: 0;\r\n    left: 0;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import { StyledCard } from './Card.style';\r\nimport { useEffect, useState } from 'react';\r\nimport { ReactComponent as Check } from 'assets/icon/check.svg';\r\nimport makeMoneyComma from 'util/makeMoneyComma';\r\n\r\ninterface ICardProps {\r\n  company: string;\r\n  number: string;\r\n  money?: string;\r\n  handleClick: ({ check, number }: { check: boolean; number: string }) => void;\r\n}\r\n\r\nconst Card = ({\r\n  company,\r\n  money,\r\n  number,\r\n  handleClick,\r\n}: ICardProps): JSX.Element => {\r\n  const [check, setCheck] = useState(false);\r\n\r\n  useEffect(() => {\r\n    handleClick({ check, number });\r\n  }, [check, number]);\r\n\r\n  return (\r\n    <StyledCard\r\n      onClick={() => {\r\n        setCheck((prev) => !prev);\r\n      }}\r\n      check={check}\r\n    >\r\n      <div className=\"info\">\r\n        <div className=\"company\">{company}</div>\r\n        <div className=\"number\">{number}</div>\r\n      </div>\r\n      {money && (\r\n        <div className=\"money\">\r\n          {makeMoneyComma(money)}\r\n          <span className=\"won\"> 원</span>\r\n        </div>\r\n      )}\r\n      <div className=\"checkBackground\">\r\n        <Check />\r\n      </div>\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useEffect } from 'react';\r\nimport Button from 'components/Common/Button';\r\nimport { StyledTitle } from './AddAccountSetCard.style';\r\nimport Card from 'components/Common/Card';\r\nimport useAddAccount from 'hooks/AddAccount/useAddAccount';\r\nimport getCompany from 'util/getCompany';\r\nimport makeAccountNumber from 'util/makeAccountNumber';\r\n\r\nconst AddAccountSetCard = (): JSX.Element => {\r\n  const {\r\n    customButtonStyle,\r\n    checkSetCard,\r\n    onClickSetCard,\r\n    setCardCheck,\r\n    getMyAllAccount,\r\n    card,\r\n  } = useAddAccount();\r\n\r\n  useEffect(() => {\r\n    checkSetCard();\r\n  }, [checkSetCard]);\r\n\r\n  useEffect(() => {\r\n    getMyAllAccount();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <StyledTitle>\r\n        <div>계좌 선택</div>\r\n      </StyledTitle>\r\n      {card.map((v) => {\r\n        return (\r\n          <Card\r\n            key={v.accountId}\r\n            company={getCompany(v.accountId)}\r\n            handleClick={setCardCheck}\r\n            number={makeAccountNumber(v.accountId)}\r\n          />\r\n        );\r\n      })}\r\n      {card.length === 0 && <div>등록할 계좌가 없습니다.</div>}\r\n      <Button\r\n        customStyle={customButtonStyle}\r\n        children=\"등록하기\"\r\n        handleClick={onClickSetCard}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddAccountSetCard;\r\n","import AddAccountSetCard from 'components/AddAccountSetCard';\r\nimport PageTemplate from 'components/Common/Base/PageTemplate';\r\n\r\nconst AddAccountSetCardPage = (): JSX.Element => {\r\n  return (\r\n    <PageTemplate isHeader isFooter={false} isLogout={false}>\r\n      <AddAccountSetCard />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default AddAccountSetCardPage;","import styled from '@emotion/styled';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledTitle = styled.div`\r\n  text-align: start;\r\n  margin-bottom: 60px;\r\n  font-family: 'AppleB';\r\n  font-size: ${fontPalette.font28};\r\n  color: ${(props) => props.theme.fontColor};\r\n`;\r\n\r\nexport const StyledAccountNameTitle = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 12px;\r\n  font-family: 'AppleB';\r\n  font-size: ${fontPalette.font24};\r\n  color: ${(props) => props.theme.fontColor};\r\n`;\r\n","import { atom } from 'recoil';\r\nimport { IEstablishAccountInfo } from 'types/account/account.type';\r\n\r\nexport const accountPasswordState = atom<string>({\r\n  key: 'accountPasswordState',\r\n  default: '',\r\n});\r\n\r\nexport const establishAccountInfoState = atom<IEstablishAccountInfo>({\r\n  key: 'establishAccountInfoState',\r\n  default: {} as IEstablishAccountInfo,\r\n});\r\n\r\nexport const accountNameState = atom<string>({\r\n  key: \"accountNameState\",\r\n  default: \"\",\r\n})\r\n","import useLink from 'hooks/Common/useLink';\r\nimport JSConfetti from 'js-confetti';\r\nimport { handleEstablishAccount } from 'lib/api/account/account.api';\r\nimport Toast from 'lib/Toast';\r\nimport { CSSProperties, useMemo, useRef, useState } from 'react';\r\nimport { useRecoilState, useResetRecoilState } from 'recoil';\r\nimport {\r\n  accountNameState,\r\n  accountPasswordState,\r\n  establishAccountInfoState,\r\n} from 'store/establishAccount';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { IEstablishAccountInfo } from 'types/account/account.type';\r\nimport makeAccountNumber from 'util/makeAccountNumber';\r\n\r\nconst useEstablishAccount = () => {\r\n  const confetti = useRef<JSConfetti | null>(null);\r\n  const [accountName, setAccountName] =\r\n    useRecoilState<string>(accountNameState);\r\n  const [password, setPassword] = useRecoilState<string>(accountPasswordState);\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [accountInfo, setAccountInfo] = useRecoilState<IEstablishAccountInfo>(\r\n    establishAccountInfoState,\r\n  );\r\n\r\n  const resetAccountInfo = useResetRecoilState(establishAccountInfoState);\r\n  const resetPassword = useResetRecoilState(accountPasswordState);\r\n\r\n  const { handleLink: pushNext } = useLink('/establish/complete');\r\n  const { handleLink: pushMain } = useLink('/main');\r\n\r\n  const resetAllState = () => {\r\n    resetAccountInfo();\r\n    resetPassword();\r\n    setPasswordError('');\r\n  };\r\n\r\n  const popEmoji = () => {\r\n    confetti.current?.addConfetti({\r\n      emojis: ['🎇', '✨', '😎', '🎈', '🧨', '🎉', '🎊'],\r\n      // @ts-ignore\r\n      emojiSize: 36,\r\n      confettiNumber: 100,\r\n    });\r\n  };\r\n\r\n  const onChangePassword = (res: string) => {\r\n    setPassword(res);\r\n    checkPasswordError(res);\r\n  };\r\n\r\n  const checkPasswordError = (res: string) => {\r\n    if (res.length < 4) {\r\n      setPasswordError('비밀번호를 올바르게 입력해주세요');\r\n    } else {\r\n      setPasswordError('');\r\n    }\r\n  };\r\n\r\n  const customButtonStyle: CSSProperties = useMemo(() => {\r\n    return {\r\n      backgroundColor: ColorPalette.main,\r\n      color: ColorPalette.fureBlack,\r\n      marginTop: '70px',\r\n    };\r\n  }, []);\r\n\r\n  const onClickEstablish = () => {\r\n    if (password.length === 4 && accountName.length > 0) {\r\n      establishAccount();\r\n    } else {\r\n      Toast.infoToast('정보를 제대로 기입해주세요');\r\n    }\r\n  };\r\n\r\n  const establishAccount = async () => {\r\n    try {\r\n      const req = { password, accountName };\r\n      const { data } = await handleEstablishAccount(req);\r\n      setAccountInfo({\r\n        accountId: makeAccountNumber(data.accountId),\r\n        name: data.user.name,\r\n      });\r\n      sessionStorage.setItem('EstablishCard', 'complete');\r\n      pushNext();\r\n    } catch (e: any) {\r\n      Toast.errorToast(e.response.data.message);\r\n    }\r\n  };\r\n\r\n  const checkPasswordStorage = () => {\r\n    if (sessionStorage.getItem('EstablishCard') !== 'getPassword') {\r\n      Toast.errorToast('비정상적인 접근입니다.');\r\n      pushMain();\r\n    }\r\n  };\r\n\r\n  const checkCompleteStorage = () => {\r\n    if (sessionStorage.getItem('EstablishCard') !== 'complete') {\r\n      Toast.errorToast('비정상적인 접근입니다.');\r\n      pushMain();\r\n    }\r\n  };\r\n\r\n  const onClickComplete = () => {\r\n    sessionStorage.removeItem('EstablishCard');\r\n    popEmoji();\r\n    confetti.current = null;\r\n    pushMain();\r\n    resetAllState();\r\n  };\r\n\r\n  return {\r\n    pushMain,\r\n    checkPasswordStorage,\r\n    checkCompleteStorage,\r\n    password,\r\n    passwordError,\r\n    setPassword,\r\n    setPasswordError,\r\n    accountName,\r\n    setAccountName,\r\n    onClickComplete,\r\n    onChangePassword,\r\n    customButtonStyle,\r\n    onClickEstablish,\r\n    accountInfo,\r\n    popEmoji,\r\n    confetti,\r\n  };\r\n};\r\n\r\nexport default useEstablishAccount;\r\n","import React, { useEffect } from 'react';\r\nimport AuthForm from 'components/Common/AuthForm';\r\nimport {\r\n  StyledAccountNameTitle,\r\n  StyledTitle,\r\n} from './EstablishAccountPassword.style';\r\nimport Button from 'components/Common/Button';\r\nimport useEstablishAccount from 'hooks/EstablishAccount/useEstablishAccount';\r\nimport InfoInput from 'components/Common/Input/InfoInput';\r\n\r\nconst EstablishAccountPassword = (): JSX.Element => {\r\n  const {\r\n    passwordError,\r\n    onChangePassword,\r\n    onClickEstablish,\r\n    customButtonStyle,\r\n    checkPasswordStorage,\r\n    accountName,\r\n    setAccountName,\r\n  } = useEstablishAccount();\r\n\r\n  useEffect(() => {\r\n    checkPasswordStorage();\r\n  }, [checkPasswordStorage]);\r\n\r\n  useEffect(() => {\r\n    console.log(accountName);\r\n  }, [accountName]);\r\n\r\n  return (\r\n    <>\r\n      <StyledTitle>개설할 계좌 정보를 입력해주세요</StyledTitle>\r\n      <StyledAccountNameTitle>계좌 이름 입력</StyledAccountNameTitle>\r\n      <InfoInput\r\n        name=\"accountName\"\r\n        value={accountName}\r\n        onChange={(e) => {\r\n          setAccountName(e.target.value);\r\n        }}\r\n        type=\"text\"\r\n        placeholder=\"계좌 이름을 기입해주세요\"\r\n        customStyle={{ marginBottom: '118px' }}\r\n      />\r\n      <AuthForm\r\n        title=\"계좌 비밀번호 설정\"\r\n        error={passwordError}\r\n        onChange={onChangePassword}\r\n        length={4}\r\n        customErrorStyle={{ textAlign: 'center' }}\r\n        customTitleStyle={{ textAlign: 'center' }}\r\n      />\r\n      <Button\r\n        children=\"개설\"\r\n        customStyle={customButtonStyle}\r\n        handleClick={onClickEstablish}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EstablishAccountPassword;\r\n","import PageTemplate from 'components/Common/Base/PageTemplate';\r\nimport EstablishAccountPassword from 'components/EstablishAccountPassword';\r\n\r\nconst EstablishAccountPasswordPage = (): JSX.Element => {\r\n  return (\r\n    <PageTemplate isHeader isFooter={false} isLogout={false}>\r\n      <EstablishAccountPassword />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default EstablishAccountPasswordPage;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledTitle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom: 1.5px solid ${ColorPalette.fureBlack};\r\n  text-align: start;\r\n  margin-bottom: 45px;\r\n  .title {\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font48};\r\n    color: ${ColorPalette.fureBlack};\r\n  }\r\n  .subTitle {\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font24};\r\n    color: ${ColorPalette.darkGrey};\r\n    margin-bottom: 12px;\r\n  }\r\n`;\r\n\r\nexport const StyledContent = styled.div`\r\n  text-align: start;\r\n  margin-bottom: 8px;\r\n  .property {\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font24};\r\n    color: ${ColorPalette.darkBlue};\r\n  }\r\n  .content {\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font24};\r\n    color: ${ColorPalette.fureBlack};\r\n  }\r\n  &:nth-of-type(3) {\r\n    margin-bottom: 190px;\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport Button from 'components/Common/Button';\r\nimport { StyledContent, StyledTitle } from './EstablishAccountComplete.style';\r\nimport useEstablishAccount from 'hooks/EstablishAccount/useEstablishAccount';\r\nimport JSConfetti from 'js-confetti';\r\n\r\nconst EstablishAccountComplete = (): JSX.Element => {\r\n  const {\r\n    customButtonStyle,\r\n    checkCompleteStorage,\r\n    onClickComplete,\r\n    accountInfo,\r\n    confetti,\r\n  } = useEstablishAccount();\r\n\r\n  useEffect(() => {\r\n    confetti.current = new JSConfetti();\r\n    checkCompleteStorage();\r\n  }, [checkCompleteStorage, confetti]);\r\n\r\n  return (\r\n    <>\r\n      <StyledTitle>\r\n        <div className=\"title\">{`${accountInfo.name}님 축하합니다!`}</div>\r\n        <div className=\"subTitle\">\r\n          통장이 개설되었습니다. <br />\r\n          이제 자유롭게 사용해보세요!\r\n        </div>\r\n      </StyledTitle>\r\n      <StyledContent>\r\n        <span className=\"property\">계좌번호: </span>\r\n        <span className=\"content\">{`${accountInfo.accountId}`}</span>\r\n      </StyledContent>\r\n      <Button\r\n        children=\"완료\"\r\n        customStyle={customButtonStyle}\r\n        handleClick={onClickComplete}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EstablishAccountComplete;\r\n","import PageTemplate from 'components/Common/Base/PageTemplate';\r\nimport EstablishAccountComplete from 'components/EstablishAccountComplete';\r\n\r\nconst EstablishAccountCompletePage = (): JSX.Element => {\r\n  return (\r\n    <PageTemplate isFooter={false} isHeader isLogout={false}>\r\n      <EstablishAccountComplete />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default EstablishAccountCompletePage;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\ninterface IStyledCardProps {\r\n  check: boolean;\r\n}\r\n\r\nexport const StyledCard = styled.div<IStyledCardProps>`\r\n  position: relative;\r\n  cursor: pointer;\r\n  background-color: ${ColorPalette.skyBlue};\r\n  border: none;\r\n  border-radius: 10px;\r\n  margin-bottom: 20px;\r\n  padding: 16px;\r\n  width: 100%;\r\n  height: 154px;\r\n  .title {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: start;\r\n    .company {\r\n      font-family: 'AppleB';\r\n      font-size: ${fontPalette.font20};\r\n      color: ${ColorPalette.fureWhite};\r\n    }\r\n    .number {\r\n      font-family: 'AppleB';\r\n      font-size: ${fontPalette.font14};\r\n      color: ${ColorPalette.fureWhite};\r\n    }\r\n  }\r\n\r\n  .money {\r\n    font-family: 'AppleEB';\r\n    font-size: ${fontPalette.font28};\r\n    color: ${ColorPalette.fureWhite};\r\n    font-weight: bold;\r\n    .won {\r\n      font-family: 'AppleB';\r\n      font-size: ${fontPalette.font24};\r\n      color: ${ColorPalette.fureWhite};\r\n      font-weight: normal;\r\n    }\r\n  }\r\n\r\n  .checkBackground {\r\n    display: flex;\r\n    opacity: ${(props) => (props.check ? 1 : 0)};\r\n    transition: 0.4s ease-in-out;\r\n    display: flex;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: none;\r\n    border-radius: 10px;\r\n    background-color: ${ColorPalette.darkGrey}95;\r\n    top: 0;\r\n    left: 0;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import { StyledCard } from './Card.style';\r\nimport { ReactComponent as Check } from 'assets/icon/check.svg';\r\nimport makeMoneyComma from 'util/makeMoneyComma';\r\n\r\ninterface ICardProps {\r\n  company: string;\r\n  money: string;\r\n  number: string;\r\n  check: boolean;\r\n  handleClick: (number: string) => void;\r\n}\r\n\r\nconst Card = ({\r\n  check,\r\n  money,\r\n  number,\r\n  handleClick,\r\n  company,\r\n}: ICardProps): JSX.Element => {\r\n  return (\r\n    <StyledCard onClick={() => handleClick(number)} check={check}>\r\n      <div className=\"title\">\r\n        <div className=\"company\">{company}</div>\r\n        <div className=\"number\">{number}</div>\r\n      </div>\r\n      <div className=\"money\">\r\n        {makeMoneyComma(money)}\r\n        <span className=\"won\"> 원</span>\r\n      </div>\r\n      <div className=\"checkBackground\">\r\n        <Check />\r\n      </div>\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledTitle = styled.div`\r\n  font-family: 'AppleB';\r\n  font-size: ${fontPalette.font28};\r\n  color: ${(props) => props.theme.fontColor};\r\n  margin-bottom: 45px;\r\n  text-align: start;\r\n`;\r\n\r\nexport const StyledButton = styled.div`\r\n  position: fixed;\r\n  width: 100vw;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  cursor: pointer;\r\n  background-color: ${ColorPalette.main};\r\n  color: ${ColorPalette.fureBlack};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  text-align: center;\r\n  font-family: 'AppleEB';\r\n  font-size: ${fontPalette.font24};\r\n`;\r\n","import { atom } from 'recoil';\r\n\r\nexport const cardState = atom<string>({\r\n  key: 'cardState',\r\n  default: '',\r\n});\r\n","import useLink from 'hooks/Common/useLink';\r\nimport { handleGetMyAccount } from 'lib/api/account/account.api';\r\nimport Toast from 'lib/Toast';\r\nimport {  useState } from 'react';\r\nimport { useRecoilState, useResetRecoilState } from 'recoil';\r\nimport { cardState } from 'store/getAccountInfo';\r\nimport { IAccount } from 'types/account/account.type';\r\nimport { UGetAccountTitle } from 'types/common/common.type';\r\nimport { removeHyphen } from 'util/removeHyphen';\r\nimport { useHistory } from 'react-router';\r\nimport { History } from 'history';\r\n\r\nconst useGetAccountInfo = () => {\r\n  const { handleLink: pushMain } = useLink('/main');\r\n  const history: History = useHistory();\r\n  const [card, setCard] = useRecoilState<string>(cardState);\r\n  const [money, setMoney] = useState<string>('');\r\n  const [cardList, setCardList] = useState<IAccount[]>();\r\n  const resetCard = useResetRecoilState(cardState);\r\n\r\n  const onClickCard = ({\r\n    number,\r\n    money,\r\n  }: {\r\n    number: string;\r\n    money: string;\r\n  }) => {\r\n    setCard(removeHyphen(number));\r\n    setMoney(money);\r\n  };\r\n\r\n  const checkStorage = (title: UGetAccountTitle) => {\r\n    if (title === '송금하기') {\r\n      if (sessionStorage.getItem('Remittance') !== 'getCard') {\r\n        Toast.errorToast('비정상적인 접근입니다.');\r\n        pushMain();\r\n      }\r\n    } else {\r\n      if (sessionStorage.getItem('Bring') !== 'getCard') {\r\n        Toast.errorToast('비정상적인 접근입니다.');\r\n        pushMain();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClickNext = (title: UGetAccountTitle) => {\r\n    if (card.length <= 0) {\r\n      Toast.infoToast('카드를 선택해주세요');\r\n      return;\r\n    }\r\n\r\n    if (parseInt(money) <= 0) {\r\n      Toast.infoToast('계좌에 돈이 없습니다.');\r\n      return;\r\n    }\r\n\r\n    if (title === '송금하기') {\r\n      sessionStorage.setItem('Remittance', 'setCard');\r\n      history.push(`/remittance/setcard?number=${card}`);\r\n    } else {\r\n      sessionStorage.setItem('Bring', 'money');\r\n      history.push(`/bring/money?number=${card}`);\r\n    }\r\n  };\r\n\r\n  const getMyAccount = async () => {\r\n    try {\r\n      const { data } = await handleGetMyAccount();\r\n      setCardList(data);\r\n    } catch (e: any) {\r\n      Toast.infoToast(e.response.data.message);\r\n    }\r\n  };\r\n\r\n  return {\r\n    onClickCard,\r\n    money,\r\n    resetCard,\r\n    card,\r\n    cardList,\r\n    getMyAccount,\r\n    onClickNext,\r\n    checkStorage,\r\n  };\r\n};\r\n\r\nexport default useGetAccountInfo;\r\n","import React, { useEffect } from 'react';\r\nimport Card from './Card';\r\nimport { StyledButton, StyledTitle } from './GetAccountInfo.style';\r\nimport useGetAccountInfo from 'hooks/GetAccountInfo/useGetAccountInfo';\r\nimport { UGetAccountTitle } from 'types/common/common.type';\r\nimport getCompany from 'util/getCompany';\r\nimport makeAccountNumber from 'util/makeAccountNumber';\r\nimport makeMoneyComma from 'util/makeMoneyComma';\r\n\r\nconst GetAccountInfo = ({\r\n  title,\r\n}: {\r\n  title: UGetAccountTitle;\r\n}): JSX.Element => {\r\n  const {\r\n    resetCard,\r\n    checkStorage,\r\n    onClickCard,\r\n    getMyAccount,\r\n    cardList,\r\n    onClickNext,\r\n    card,\r\n  } = useGetAccountInfo();\r\n\r\n  useEffect(() => {\r\n    resetCard();\r\n    checkStorage(title);\r\n    getMyAccount();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <StyledTitle>{title}</StyledTitle>\r\n      {cardList &&\r\n        cardList.map((c) => {\r\n          return (\r\n            <Card\r\n              key={c.accountId}\r\n              company={getCompany(c.accountId)}\r\n              handleClick={() =>\r\n                onClickCard({ number: c.accountId, money: c.money })\r\n              }\r\n              money={makeMoneyComma(c.money)}\r\n              number={makeAccountNumber(c.accountId)}\r\n              check={card === c.accountId}\r\n            />\r\n          );\r\n        })}\r\n      <StyledButton onClick={() => onClickNext(title)}>다음</StyledButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GetAccountInfo;\r\n","import PageTemplate from 'components/Common/Base/PageTemplate';\r\nimport GetAccountInfo from 'components/GetAccountInfo';\r\n\r\nconst RemittanceGetCardPage = (): JSX.Element => {\r\n  return (\r\n    <PageTemplate isFooter={false} isLogout={false} isHeader>\r\n      <GetAccountInfo title=\"송금하기\" />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default RemittanceGetCardPage;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledTitle = styled.div`\r\n  font-family: 'AppleB';\r\n  font-size: ${fontPalette.font28};\r\n  color:  ${(props) => props.theme.fontColor};\r\n  text-align: start;\r\n  margin-bottom: 45px;\r\n`;\r\n\r\nexport const StyledButton = styled.div`\r\n  position: fixed;\r\n  width: 100vw;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  cursor: pointer;\r\n  background-color: ${ColorPalette.main};\r\n  color: ${ColorPalette.fureBlack};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  text-align: center;\r\n  font-family: 'AppleEB';\r\n  font-size: ${fontPalette.font24};\r\n`;\r\n","import { ChangeEvent, CSSProperties, useMemo, useState } from 'react';\r\nimport Toast from 'lib/Toast';\r\nimport { fontPalette } from 'styles/FontPalette';\r\nimport useLink from 'hooks/Common/useLink';\r\nimport makeAccountNumber from 'util/makeAccountNumber';\r\nimport useQueryString from 'hooks/Common/useQueryString';\r\nimport { handleGetAccountInfo } from 'lib/api/account/account.api';\r\nimport { useHistory } from 'react-router';\r\nimport { History } from 'history';\r\nimport { removeHyphen } from 'util/removeHyphen';\r\n\r\nconst useRemittance = () => {\r\n  const { number } = useQueryString();\r\n  const history: History = useHistory();\r\n  const [account, setAccount] = useState<string>('');\r\n  const [money, setMoney] = useState<string>('1');\r\n  const [accountError, setAccountError] = useState<string>('');\r\n  const [moneyError, setMoneyError] = useState<string>('');\r\n  const [openModal, setOpenModal] = useState<boolean>(false);\r\n  const [balance, setBalance] = useState<string>('0');\r\n  const [modalInfo, setModalInfo] = useState<string>();\r\n\r\n  const { handleLink: pushMain } = useLink('/main');\r\n\r\n  const customTitleInputStyle: CSSProperties = useMemo(() => {\r\n    return {\r\n      fontFamily: 'AppleM',\r\n      fontSize: '20px',\r\n      marginBottom: '20px',\r\n    };\r\n  }, []);\r\n\r\n  const customInputStyle: CSSProperties = useMemo(() => {\r\n    return {\r\n      width: '100%',\r\n      height: '80px',\r\n      fontSize: fontPalette.font28,\r\n      padding: '20px',\r\n    };\r\n  }, []);\r\n\r\n  const getAccountInfo = async () => {\r\n    try {\r\n      const { data } = await handleGetAccountInfo(number as string);\r\n      setBalance(data.money);\r\n    } catch (e: any) {\r\n      Toast.errorToast(e.response.data.message);\r\n    }\r\n  };\r\n\r\n  const checkStorage = () => {\r\n    if (sessionStorage.getItem('Remittance') !== 'setCard') {\r\n      Toast.errorToast('비정삭적인 접근입니다');\r\n      pushMain();\r\n    }\r\n  };\r\n\r\n  const onChangeMoney = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setMoney(e.target.value.replace(/[^0-9]/g, ''));\r\n    checkMoneyError(e.target.value.replace(/[^0-9]/g, ''));\r\n  };\r\n\r\n  const onChangeAccountNumber = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setAccount(makeAccountNumber(e.target.value));\r\n    checkAccountError(makeAccountNumber(e.target.value));\r\n  };\r\n\r\n  const checkAccountError = (value: string) => {\r\n    if (value.length < 14) {\r\n      setAccountError('계좌번호를 제대로 작성해주세요');\r\n    } else {\r\n      setAccountError('');\r\n    }\r\n  };\r\n\r\n  const checkMoneyError = (value: string) => {\r\n    if (value.length <= 0 || parseInt(value) > parseInt(balance)) {\r\n      setMoneyError('금액을 제대로 입력해주세요');\r\n    } else {\r\n      setMoneyError('');\r\n    }\r\n  };\r\n\r\n  const getReceiveAccountInfo = async () => {\r\n    try {\r\n      const { data } = await handleGetAccountInfo(removeHyphen(account));\r\n      setModalInfo(data.accountId);\r\n      setOpenModal(true);\r\n    } catch (e: any) {\r\n      Toast.errorToast('등록되어있지 않은 계좌번호입니다.');\r\n    }\r\n  };\r\n\r\n  const onClickNext = async () => {\r\n    console.log(account.length);\r\n    if (\r\n      accountError !== '' ||\r\n      moneyError !== '' ||\r\n      account.length <= 0 ||\r\n      money.length <= 0\r\n    ) {\r\n      Toast.errorToast('계좌번호 또는 금액을 제대로 입력해주세요');\r\n      return;\r\n    }\r\n    if (removeHyphen(account) === number) {\r\n      Toast.errorToast('자기자신에게는 송금할 수 없습니다.');\r\n      return;\r\n    }\r\n\r\n    await getReceiveAccountInfo();\r\n  };\r\n\r\n  const onClickModalYes = () => {\r\n    sessionStorage.setItem('Remittance', 'confirm');\r\n    setOpenModal(false);\r\n    history.push(\r\n      `/remittance/confirm?push=${number}&receive=${modalInfo}&money=${money}`,\r\n    );\r\n  };\r\n\r\n  return {\r\n    getAccountInfo,\r\n    onClickModalYes,\r\n    openModal,\r\n    setOpenModal,\r\n    customInputStyle,\r\n    balance,\r\n    modalInfo,\r\n    customTitleInputStyle,\r\n    account,\r\n    money,\r\n    onClickNext,\r\n    moneyError,\r\n    onChangeAccountNumber,\r\n    onChangeMoney,\r\n    accountError,\r\n    checkStorage,\r\n  };\r\n};\r\n\r\nexport default useRemittance;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledTitle = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  align-items: center;\r\n  margin-bottom: 2px;\r\n  margin-top: 29px;\r\n  .title {\r\n    font-size: ${fontPalette.font20};\r\n    color:  ${(props) => props.theme.fontColor};\r\n  }\r\n  .balance {\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font18};\r\n    color: ${ColorPalette.darkGrey};\r\n    .title {\r\n      font-family: 'AppleB';\r\n      font-size: ${fontPalette.font18};\r\n      color: ${ColorPalette.darkGrey};\r\n    }\r\n    .won {\r\n      font-family: 'AppleB';\r\n      font-size: ${fontPalette.font18};\r\n      color: ${ColorPalette.darkGrey};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledKorean = styled.div`\r\n  text-align: end;\r\n  font-family: 'AppleB';\r\n  font-size: ${fontPalette.font24};\r\n  color: ${ColorPalette.darkBlue};\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nexport const StlyedError = styled.div`\r\n  &::before {\r\n    content: '*';\r\n    color: ${ColorPalette.highlightRed};\r\n    font-size: ${fontPalette.font14};\r\n  }\r\n  text-align: start;\r\n  margin-top: 8px;\r\n  font-family: 'AppleB';\r\n  font-size: ${fontPalette.font14};\r\n  color: ${ColorPalette.highlightRed};\r\n`;\r\n","import InfoInput from '../Input/InfoInput';\r\nimport React, { ChangeEvent, CSSProperties } from 'react';\r\nimport { StyledTitle, StyledKorean, StlyedError } from './AccountForm.style';\r\nimport { numToKorean, FormatOptions } from 'num-to-korean';\r\ninterface IAccountFormProps {\r\n  title: string;\r\n  balance: string;\r\n  value: string;\r\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\r\n  error: string;\r\n  placeholder: string;\r\n  name: string;\r\n  maxLength?: number;\r\n  customTitleStyle?: CSSProperties;\r\n  customInputStyle?: CSSProperties;\r\n}\r\n\r\nconst AccountForm = ({\r\n  title,\r\n  value,\r\n  name,\r\n  balance,\r\n  error,\r\n  onChange,\r\n  placeholder,\r\n  customInputStyle,\r\n  customTitleStyle,\r\n  maxLength,\r\n}: IAccountFormProps): JSX.Element => {\r\n  return (\r\n    <>\r\n      <StyledTitle>\r\n        <span className=\"title\" style={customTitleStyle}>\r\n          {title}\r\n        </span>\r\n        <span className=\"balance\">\r\n          <span className=\"title\">잔액: </span>\r\n          {balance}\r\n          <span className=\"won\"> 원</span>\r\n        </span>\r\n      </StyledTitle>\r\n      <StyledKorean>\r\n        {numToKorean(parseInt(value), FormatOptions.LINGUAL)} 원\r\n      </StyledKorean>\r\n      <InfoInput\r\n        name={name}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        customStyle={customInputStyle}\r\n        onChange={onChange}\r\n        maxLength={maxLength}        \r\n      />\r\n      {error && <StlyedError>{error}</StlyedError>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountForm;\r\n","import { ReactNode } from 'react';\r\nimport reactDom from 'react-dom';\r\n\r\nconst ModalPortal = ({ children }: { children: ReactNode }) => {\r\n  const el = document.getElementById('modal');\r\n  return el && reactDom.createPortal(children, el);\r\n};\r\n\r\nexport default ModalPortal;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledModal = styled.div`\r\n  width: 400px;\r\n  border-radius: 10px;\r\n  min-height: 260px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledContent = styled.div`\r\n  padding: 46px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  min-height: 200px;\r\n  background-color: ${ColorPalette.fureWhite};\r\n  border-top-right-radius: 10px;\r\n  border-top-left-radius: 10px;\r\n  .title {\r\n    word-break: keep-all;\r\n    margin-bottom: 18px;\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font28};\r\n  }\r\n  .content {\r\n    width: 308px;\r\n    height: auto;\r\n    word-break: keep-all;\r\n    font-family: 'AppleB';\r\n    font-size: ${fontPalette.font24};\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  border: none;\r\n  margin: auto 0 0 auto;\r\n  .no {\r\n    cursor: pointer;\r\n    border: none;\r\n    width: 200px;\r\n    height: 60px;\r\n    border-bottom-left-radius: 10px;\r\n    background-color: ${ColorPalette.darkGrey};\r\n    font-size: ${fontPalette.font24};\r\n  }\r\n  .yes {\r\n    cursor: pointer;\r\n    border: none;\r\n    width: 200px;\r\n    height: 60px;\r\n    border-bottom-right-radius: 10px;\r\n    font-family: 'AppleB';\r\n    background-color: ${ColorPalette.main};\r\n    font-size: ${fontPalette.font24};\r\n  }\r\n`;\r\n\r\nexport const StyledBackground = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  text-align: center;\r\n  background-color: ${ColorPalette.darkGrey}95;\r\n`;\r\n","import {\r\n  StyledBackground,\r\n  StyledButton,\r\n  StyledContent,\r\n  StyledModal,\r\n} from './Modal.style';\r\nimport ModalPortal from './Portal';\r\n\r\ninterface IModalProps {\r\n  title: string;\r\n  content: string;\r\n  handleNo: () => void;\r\n  handleYes: () => void;\r\n}\r\n\r\nconst Modal = ({ title, content, handleNo, handleYes }: IModalProps) => {\r\n  return (\r\n    <ModalPortal>\r\n      <StyledBackground>\r\n        <StyledModal>\r\n          <StyledContent>\r\n            <div className=\"title\">{title}</div>\r\n            <div className=\"content\">{content}</div>\r\n          </StyledContent>\r\n          <StyledButton>\r\n            <button className=\"no\" onClick={handleNo}>\r\n              아니요\r\n            </button>\r\n            <button className=\"yes\" onClick={handleYes}>\r\n              예\r\n            </button>\r\n          </StyledButton>\r\n        </StyledModal>\r\n      </StyledBackground>\r\n    </ModalPortal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect } from 'react';\r\nimport Form from 'components/Common/Form';\r\nimport { StyledButton, StyledTitle } from './RemittanceSetCard.style';\r\nimport useRemittance from 'hooks/Remittance/useRemittance';\r\nimport AccountForm from 'components/Common/AccountForm';\r\nimport ModalPortal from 'components/Common/Modal/Portal';\r\nimport Modal from 'components/Common/Modal/Modal';\r\nimport getCompany from 'util/getCompany';\r\nimport makeAccountNumber from 'util/makeAccountNumber';\r\n\r\nconst RemittanceSetCard = (): JSX.Element => {\r\n  const {\r\n    onChangeMoney,\r\n    moneyError,\r\n    account,\r\n    customTitleInputStyle,\r\n    checkStorage,\r\n    money,\r\n    onChangeAccountNumber,\r\n    customInputStyle,\r\n    accountError,\r\n    onClickNext,\r\n    onClickModalYes,\r\n    getAccountInfo,\r\n    openModal,\r\n    setOpenModal,\r\n    balance,\r\n    modalInfo,\r\n  } = useRemittance();\r\n\r\n  useEffect(() => {\r\n    checkStorage();\r\n    getAccountInfo();\r\n  }, [checkStorage]);\r\n\r\n  return (\r\n    <>\r\n      <StyledTitle>송금하기</StyledTitle>\r\n      <Form\r\n        title=\"계좌번호 입력\"\r\n        placeholder=\"계좌번호를 입력해주세요\"\r\n        name=\"account\"\r\n        maxLength={14}\r\n        error={accountError}\r\n        onChange={onChangeAccountNumber}\r\n        value={account}\r\n        customInputStyle={{ marginBottom: '8px' }}\r\n        customTitleInputStyle={customTitleInputStyle}\r\n      />\r\n      <AccountForm\r\n        title=\"금액 입력\"\r\n        value={money}\r\n        name=\"account\"\r\n        error={moneyError}\r\n        onChange={onChangeMoney}\r\n        placeholder=\"금액을 입력해주세요\"\r\n        maxLength={10}\r\n        balance={balance}\r\n        customInputStyle={customInputStyle}\r\n      />\r\n      <StyledButton onClick={onClickNext}>다음</StyledButton>\r\n\r\n      {openModal && (\r\n        <ModalPortal>\r\n          <Modal\r\n            title={getCompany(modalInfo as string)}\r\n            content={`${makeAccountNumber(\r\n              modalInfo as string,\r\n            )}로 ${money}원을 송금하시겠습니까?`}\r\n            handleNo={() => {\r\n              setOpenModal(false);\r\n            }}\r\n            handleYes={onClickModalYes}\r\n          />\r\n        </ModalPortal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RemittanceSetCard;\r\n","import PageTemplate from 'components/Common/Base/PageTemplate';\r\nimport RemittanceSetCard from 'components/RemittanceSetCard';\r\n\r\nconst RemittanceSetCardPage = (): JSX.Element => {\r\n  return (\r\n    <PageTemplate isFooter={false} isLogout={false} isHeader>\r\n      <RemittanceSetCard />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default RemittanceSetCardPage;\r\n","import useLink from 'hooks/Common/useLink';\r\nimport Toast from 'lib/Toast';\r\n\r\nconst useConfirmInfo = () => {\r\n  const { handleLink: pushMain } = useLink('/main');\r\n\r\n  const onClickNo = () => {\r\n    pushMain();\r\n  };\r\n\r\n  const checkStorage = () => {\r\n    if (sessionStorage.getItem('Remittance') !== 'confirm') {\r\n      Toast.errorToast('비정상적인 접근입니다');\r\n      pushMain();\r\n    }\r\n  };\r\n\r\n  return {\r\n    onClickNo,\r\n    checkStorage,\r\n  };\r\n};\r\n\r\nexport default useConfirmInfo;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledTitle = styled.div`\r\n  font-family: 'AppleB';\r\n  font-size: ${fontPalette.font28};\r\n  color:  ${(props) => props.theme.fontColor};\r\n  text-align: start;\r\n  margin-bottom: 70px;\r\n`;\r\n\r\nexport const StyledWrapper = styled.div`\r\n  min-height: 325px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: start;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${(props) => props.theme.fontColor};\r\n  .line {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    text-align: center;\r\n    align-items: center;\r\n    margin-bottom: 36px;\r\n    &:last-child {\r\n      margin-bottom: 85px;\r\n    }\r\n    .property {\r\n      font-size: ${fontPalette.font24};\r\n      color: ${ColorPalette.darkGrey};\r\n    }\r\n    .content {\r\n      font-weight: bold;\r\n      font-family: 'AppleB';\r\n      font-size: ${fontPalette.font24};\r\n      color:  ${(props) => props.theme.fontColor};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  margin-top: 85px;\r\n  .no {\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 100%;\r\n    height: 60px;\r\n    background-color: ${ColorPalette.darkGrey};\r\n    color: ${ColorPalette.fureBlack};\r\n    font-size: ${fontPalette.font24};\r\n  }\r\n  .yes {\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 100%;\r\n    height: 60px;\r\n    font-family: 'AppleB';\r\n    background-color: ${ColorPalette.main};\r\n    color: ${ColorPalette.fureBlack};\r\n    font-size: ${fontPalette.font24};\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport useConfirmInfo from 'hooks/ConfirmInfo/useConfirmInfo';\r\nimport { StyledWrapper, StyledTitle, StyledButton } from './ConfirmInfo.style';\r\n\r\ninterface IConfirmInfoProps {\r\n  title: string;\r\n  give?: string;\r\n  receive?: string;\r\n  money: string;\r\n  commission?: string;\r\n  onClick: () => void;\r\n}\r\n\r\nconst ConfirmInfo = ({\r\n  title,\r\n  money,\r\n  commission,\r\n  give,\r\n  receive,\r\n  onClick,\r\n}: IConfirmInfoProps): JSX.Element => {\r\n  const { onClickNo, checkStorage } = useConfirmInfo();\r\n\r\n  useEffect(() => {\r\n    checkStorage();\r\n  }, [checkStorage]);\r\n\r\n  return (\r\n    <>\r\n      <StyledTitle>{title}</StyledTitle>\r\n      <StyledWrapper>\r\n        {give && (\r\n          <div className=\"line\">\r\n            <div className=\"property\">출금계좌: </div>\r\n            <div className=\"content\">{give}</div>\r\n          </div>\r\n        )}\r\n        {receive && (\r\n          <div className=\"line\">\r\n            <div className=\"property\">받은계좌: </div>\r\n            <div className=\"content\">{receive}</div>\r\n          </div>\r\n        )}\r\n        <div className=\"line\">\r\n          <div className=\"property\">보낼금액: </div>\r\n          <div className=\"content\">{money} 원</div>\r\n        </div>\r\n        {commission && (\r\n          <div className=\"line\">\r\n            <div className=\"property\">수수료: </div>\r\n            <div className=\"content\">{commission} 원</div>\r\n          </div>\r\n        )}\r\n      </StyledWrapper>\r\n      <StyledButton>\r\n        <div className=\"no\" onClick={onClickNo}>\r\n          아니요\r\n        </div>\r\n        <div className=\"yes\" onClick={onClick}>\r\n          예\r\n        </div>\r\n      </StyledButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConfirmInfo;\r\n","import useQueryString from 'hooks/Common/useQueryString';\r\nimport { useHistory } from 'react-router';\r\nimport { History } from 'history';\r\n\r\nconst useRemittanceConfirm = () => {\r\n  const history: History = useHistory();\r\n  const { push } = useQueryString();\r\n  const { receive } = useQueryString();\r\n  const { money } = useQueryString();\r\n\r\n  const onClickConfirmYes = () => {\r\n    sessionStorage.setItem('Remittance', 'password');\r\n    history.push(\r\n      `/remittance/password?push=${push}&receive=${receive}&money=${money}`,\r\n    );\r\n  };\r\n\r\n  return {\r\n    push,\r\n    receive,\r\n    money,\r\n    onClickConfirmYes,\r\n  };\r\n};\r\n\r\nexport default useRemittanceConfirm;\r\n","import PageTemplate from 'components/Common/Base/PageTemplate';\r\nimport ConfirmInfo from 'components/ConfirmInfo';\r\nimport useRemittanceConfirm from 'hooks/Remittance/useRemittanceConfirm';\r\nimport makeAccountNumber from 'util/makeAccountNumber';\r\nimport makeMoneyComma from 'util/makeMoneyComma';\r\n\r\nconst RemittanceConfirmPage = (): JSX.Element => {\r\n  const { push, receive, money, onClickConfirmYes } = useRemittanceConfirm();\r\n  return (\r\n    <PageTemplate isHeader isFooter={false} isLogout={false}>\r\n      <ConfirmInfo\r\n        title={`${push}로 송금하시겠습니까?`}\r\n        give={makeAccountNumber(push as string)}\r\n        receive={makeAccountNumber(receive as string)}\r\n        commission=\"0\"\r\n        money={makeMoneyComma(money as string)}\r\n        onClick={onClickConfirmYes}\r\n      />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default RemittanceConfirmPage;\r\n","import useLink from 'hooks/Common/useLink';\r\nimport Toast from 'lib/Toast';\r\nimport { UGetPassword } from 'types/common/common.type';\r\n\r\nconst useGetPassword = () => {\r\n  const { handleLink: pushMain } = useLink('/main');\r\n\r\n  const checkStorage = (type: UGetPassword) => {\r\n    if (type === '송금') {\r\n      if (sessionStorage.getItem('Remittance') !== 'password') {\r\n        Toast.errorToast('비정삭적인 접근입니다.');\r\n        pushMain();\r\n      }\r\n    } else {\r\n      if (sessionStorage.getItem('Bring') !== 'password') {\r\n        Toast.errorToast('비정삭적인 접근입니다.');\r\n        pushMain();\r\n      }\r\n    }\r\n  };\r\n  return {\r\n    checkStorage,\r\n  };\r\n};\r\n\r\nexport default useGetPassword;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledTitle = styled.div`\r\n  font-family: 'AppleB';\r\n  font-size: ${fontPalette.font28};\r\n  color:  ${(props) => props.theme.fontColor};\r\n  text-align: start;\r\n  margin-bottom: 165px;\r\n`;\r\n\r\nexport const StyledButton = styled.div`\r\n  position: fixed;\r\n  width: 100vw;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  cursor: pointer;\r\n  background-color: ${ColorPalette.main};\r\n  color: ${ColorPalette.fureBlack};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  text-align: center;\r\n  font-family: 'AppleEB';\r\n  font-size: ${fontPalette.font24};\r\n`;","import AuthForm from 'components/Common/AuthForm';\r\nimport useGetPassword from 'hooks/GetPassword/useGetPassword';\r\nimport React, { useEffect } from 'react';\r\nimport { UGetPassword } from 'types/common/common.type';\r\nimport { StyledButton, StyledTitle } from './GetPassword.style';\r\n\r\ninterface IGetPasswordProps {\r\n  title: string;\r\n  onClick: () => void;\r\n  type: UGetPassword;\r\n  error: string;\r\n  onChange: (res: string) => void;\r\n}\r\n\r\nconst GetPassword = ({\r\n  title,\r\n  onClick,\r\n  type,\r\n  error,\r\n  onChange,\r\n}: IGetPasswordProps): JSX.Element => {\r\n  const { checkStorage } = useGetPassword();\r\n\r\n  useEffect(() => {\r\n    checkStorage(type);\r\n  }, [checkStorage, type]);\r\n\r\n  return (\r\n    <>\r\n      <StyledTitle>{title}</StyledTitle>\r\n      <AuthForm\r\n        title=\"간편비밀번호 4자리를 입력하세요\"\r\n        error={error}\r\n        onChange={onChange}\r\n        length={4}\r\n        customErrorStyle={{ textAlign: 'center' }}\r\n        customTitleStyle={{ textAlign: 'center' }}\r\n      />\r\n      <StyledButton onClick={onClick}>다음</StyledButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GetPassword;\r\n","import { useHistory } from 'react-router';\r\nimport { History } from 'history';\r\nimport useQueryString from 'hooks/Common/useQueryString';\r\nimport { useState } from 'react';\r\nimport { handleRemittance } from 'lib/api/account/account.api';\r\nimport Toast from 'lib/Toast';\r\n\r\nconst useRemittancePassword = () => {\r\n  const history: History = useHistory();\r\n  const { push } = useQueryString();\r\n  const { receive } = useQueryString();\r\n  const { money } = useQueryString();\r\n\r\n  const [password, setPassword] = useState<string>('');\r\n  const [passwordError, setPasswordError] = useState<string>('');\r\n\r\n  const onChangePassword = (value: string) => {\r\n    setPassword(value);\r\n    checkPasswordError(value);\r\n  };\r\n\r\n  const checkPasswordError = (value: string) => {\r\n    if (value.length < 4) {\r\n      setPasswordError('비밀번호를 제대로 입력해주세요');\r\n    } else {\r\n      setPasswordError('');\r\n    }\r\n  };\r\n\r\n  const remittance = async () => {\r\n    try {\r\n      const req = {\r\n        sendAccountId: push as string,\r\n        sendAccountPw: password as string,\r\n        receiveAccountId: receive as string,\r\n        money: parseInt(money as string),\r\n      };\r\n      await handleRemittance(req);\r\n      sessionStorage.setItem('Remittance', 'complete');\r\n      history.push(\r\n        `/remittance/complete?push=${push}&receive=${receive}&money=${money}`,\r\n      );\r\n    } catch (e: any) {\r\n      Toast.errorToast(e.response.data.message);\r\n    }\r\n  };\r\n\r\n  const onClickNext = () => {\r\n    if (password.length !== 4 || passwordError !== '') {\r\n      Toast.infoToast('비밀번호를 제대로 적어주세요');\r\n      return;\r\n    }\r\n\r\n    \r\n\r\n    remittance();\r\n  };\r\n\r\n  return {\r\n    onChangePassword,\r\n    onClickNext,\r\n    push,\r\n    receive,\r\n    money,\r\n    passwordError,\r\n  };\r\n};\r\n\r\nexport default useRemittancePassword;\r\n","import PageTemplate from 'components/Common/Base/PageTemplate';\r\nimport GetPassword from 'components/GetPassword';\r\nimport useRemittancePassword from 'hooks/Remittance/useRemittancePassword';\r\n\r\nconst RemittanceGetPasswordPage = (): JSX.Element => {\r\n  const { onChangePassword, passwordError, onClickNext } =\r\n    useRemittancePassword();\r\n  return (\r\n    <PageTemplate isHeader isFooter={false} isLogout={false}>\r\n      <GetPassword\r\n        title=\"계좌비밀번호 입력\"\r\n        type=\"송금\"\r\n        onClick={onClickNext}\r\n        error={passwordError}\r\n        onChange={onChangePassword}\r\n      />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default RemittanceGetPasswordPage;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledTitle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  min-height: 240px;\r\n  margin-bottom: 70px;\r\n  border-bottom: 1px solid ${ColorPalette.fureBlack};\r\n  .title {\r\n    font-family: 'AppleEB';\r\n    font-size: ${fontPalette.font28};\r\n    color: ${(props) => props.theme.fontColor};\r\n    margin-top: 30px;\r\n    margin-bottom: 70px;\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.div`\r\n  position: fixed;\r\n  width: 100vw;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  cursor: pointer;\r\n  background-color: ${ColorPalette.main};\r\n  color: ${ColorPalette.fureBlack};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  text-align: center;\r\n  font-family: 'AppleEB';\r\n  font-size: ${fontPalette.font24};\r\n`;\r\n\r\nexport const StyledWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  .line {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    text-align: center;\r\n    align-items: center;\r\n    padding: 0px 10px;\r\n    margin-bottom: 36px;\r\n    .property {\r\n      font-size: ${fontPalette.font24};\r\n      color: ${ColorPalette.darkGrey};\r\n    }\r\n    .content {\r\n      font-family: 'AppleB';\r\n      font-size: ${fontPalette.font24};\r\n      color: ${(props) => props.theme.fontColor};\r\n    }\r\n  }\r\n`;\r\n","import useLink from 'hooks/Common/useLink';\r\nimport Toast from 'lib/Toast';\r\nimport { UGetPassword } from 'types/common/common.type';\r\n\r\nconst useComplete = () => {\r\n  const { handleLink: pushMain } = useLink('/main');\r\n\r\n  const checkStorage = (type: UGetPassword) => {\r\n    if (type === '송금') {\r\n      if (sessionStorage.getItem('Remittance') !== 'complete') {\r\n        Toast.errorToast('비정상적인 접근입니다');\r\n        pushMain();\r\n      }\r\n    } else {\r\n      if (sessionStorage.getItem('Bring') !== 'complete') {\r\n        Toast.errorToast('비정상적인 접근입니다');\r\n        pushMain();\r\n      }\r\n    }\r\n  };\r\n\r\n  return {\r\n    checkStorage,\r\n  };\r\n};\r\n\r\nexport default useComplete;\r\n","import React, { useEffect } from 'react';\r\nimport { UGetPassword } from 'types/common/common.type';\r\nimport { StyledButton, StyledTitle, StyledWrapper } from './Complete.style';\r\nimport { ReactComponent as Check } from 'assets/icon/check.svg';\r\nimport useComplete from 'hooks/Complete/useComplete';\r\n\r\ninterface ICompleteProps {\r\n  title: string;\r\n  type: UGetPassword;\r\n  bringAccount?: string;\r\n  bringMoney?: string;\r\n  remittanceGiveAccount?: string;\r\n  remittanceReceiveAccount?: string;\r\n  remittanceMoney?: string;\r\n  remittanceCommission?: string;\r\n  handleClick: () => void;\r\n}\r\n\r\nconst Complete = (Props: ICompleteProps): JSX.Element => {\r\n  const { checkStorage } = useComplete();\r\n  const {\r\n    title,\r\n    bringMoney,\r\n    bringAccount,\r\n    type,\r\n    remittanceCommission,\r\n    remittanceGiveAccount,\r\n    remittanceMoney,\r\n    remittanceReceiveAccount,\r\n    handleClick,\r\n  } = Props;\r\n\r\n  useEffect(() => {\r\n    checkStorage(type);\r\n  }, [checkStorage, type]);\r\n\r\n  return (\r\n    <>\r\n      <StyledTitle>\r\n        <Check width={100} height={100} />\r\n        <div className=\"title\">{title}</div>\r\n      </StyledTitle>\r\n      <StyledWrapper>\r\n        {remittanceGiveAccount && (\r\n          <div className=\"line\">\r\n            <span className=\"property\">출금 계좌: </span>\r\n            <span className=\"content\">{remittanceGiveAccount}</span>\r\n          </div>\r\n        )}\r\n\r\n        {remittanceReceiveAccount && (\r\n          <div className=\"line\">\r\n            <span className=\"property\">받는 계좌: </span>\r\n            <span className=\"content\">{remittanceReceiveAccount}</span>\r\n          </div>\r\n        )}\r\n\r\n        {remittanceMoney && (\r\n          <div className=\"line\">\r\n            <span className=\"property\">보낸 금액: </span>\r\n            <span className=\"content\">{remittanceMoney} 원</span>\r\n          </div>\r\n        )}\r\n\r\n        {remittanceCommission && (\r\n          <div className=\"line\">\r\n            <span className=\"property\">수수료: </span>\r\n            <span className=\"content\">{remittanceCommission} 원</span>\r\n          </div>\r\n        )}\r\n\r\n        {bringAccount && (\r\n          <div className=\"line\">\r\n            <span className=\"property\">가져온 계좌: </span>\r\n            <span className=\"content\">{bringAccount}</span>\r\n          </div>\r\n        )}\r\n\r\n        {bringMoney && (\r\n          <div className=\"line\">\r\n            <span className=\"property\">가져온 금액: </span>\r\n            <span className=\"content\">{bringMoney} 원</span>\r\n          </div>\r\n        )}\r\n      </StyledWrapper>\r\n      <StyledButton onClick={handleClick}>완료</StyledButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Complete;\r\n","import useLink from 'hooks/Common/useLink';\r\nimport useQueryString from 'hooks/Common/useQueryString';\r\n\r\nconst useRemittanceComplete = () => {\r\n  const { handleLink: pushMain } = useLink('/main');\r\n  const { push } = useQueryString();\r\n  const { receive } = useQueryString();\r\n  const { money } = useQueryString();\r\n\r\n  const onClickComplete = () => {\r\n    sessionStorage.removeItem('Remittance');\r\n    pushMain();\r\n  };\r\n\r\n  return {\r\n    push,\r\n    receive,\r\n    money,\r\n    onClickComplete,\r\n  };\r\n};\r\nexport default useRemittanceComplete;\r\n","import PageTemplate from 'components/Common/Base/PageTemplate';\r\nimport Complete from 'components/Complete';\r\nimport useRemittanceComplete from 'hooks/Remittance/useRemittanceComplete';\r\nimport makeAccountNumber from 'util/makeAccountNumber';\r\nimport makeMoneyComma from 'util/makeMoneyComma';\r\n\r\nconst RemittanceCompletePage = (): JSX.Element => {\r\n  const { push, receive, money, onClickComplete } = useRemittanceComplete();\r\n  return (\r\n    <PageTemplate isHeader isFooter={false} isLogout={false}>\r\n      <Complete\r\n        title=\"이체완료\"\r\n        type=\"송금\"\r\n        handleClick={onClickComplete}\r\n        remittanceCommission=\"0\"\r\n        remittanceGiveAccount={makeAccountNumber(push as string)}\r\n        remittanceMoney={makeMoneyComma(money as string)}\r\n        remittanceReceiveAccount={makeAccountNumber(receive as string)}\r\n      />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default RemittanceCompletePage;\r\n","import PageTemplate from 'components/Common/Base/PageTemplate';\r\nimport GetAccountInfo from 'components/GetAccountInfo';\r\n\r\nconst BringGetCardPage = (): JSX.Element => {\r\n  return (\r\n    <PageTemplate isHeader isFooter={false} isLogout={false}>\r\n      <GetAccountInfo title=\"은행선택\" />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default BringGetCardPage;\r\n","import styled from '@emotion/styled';\r\nimport { ColorPalette } from 'styles/ColorPalette';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nexport const StyledButton = styled.div`\r\n  position: fixed;\r\n  width: 100vw;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  cursor: pointer;\r\n  background-color: ${ColorPalette.main};\r\n  color: ${ColorPalette.fureBlack};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  text-align: center;\r\n  font-family: 'AppleEB';\r\n  font-size: ${fontPalette.font24};\r\n`;\r\n\r\nexport const StyledTitle = styled.div`\r\n  font-family: 'AppleB';\r\n  font-size: ${fontPalette.font28};\r\n  color:  ${(props) => props.theme.fontColor};\r\n  text-align: start;\r\n  margin-bottom: 75px;\r\n`;\r\n","import useLink from 'hooks/Common/useLink';\r\nimport Toast from 'lib/Toast';\r\nimport { ChangeEvent, CSSProperties, useMemo, useState } from 'react';\r\nimport { fontPalette } from 'styles/FontPalette';\r\n\r\nconst useBring = () => {\r\n  const [money, setMoney] = useState<string>('10000');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [passwordError, setPasswordError] = useState<string>('');\r\n  const [openModal, setOpenModal] = useState<boolean>(false);\r\n  const [moneyError, setMoneyError] = useState<string>('');\r\n\r\n  const { handleLink: pushMain } = useLink('/main');\r\n  const { handleLink: pushPassword } = useLink('/bring/password');\r\n  const { handleLink: pushComplete } = useLink('/bring/complete');\r\n\r\n  const onChangePassword = (value: string) => {\r\n    setPassword(value);\r\n    checkPasswordError(value);\r\n  };\r\n\r\n  const checkPasswordError = (value: string) => {\r\n    if (value.length < 6) {\r\n      setPasswordError('비밀번호를 제대로 입력해주세요');\r\n    } else {\r\n      setPasswordError('');\r\n    }\r\n  };\r\n\r\n  const onClickNextAuth = () => {\r\n    if (password.length === 6 && passwordError === '') {\r\n      sessionStorage.setItem('Bring', 'complete');\r\n      pushComplete();\r\n    }\r\n  };\r\n\r\n  const checkStorage = () => {\r\n    if (sessionStorage.getItem('Bring') !== 'money') {\r\n      Toast.errorToast('비정상적인 접근입니다');\r\n      pushMain();\r\n    }\r\n  };\r\n\r\n  const onChangeMoney = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setMoney(e.target.value.replace(/[^0-9]/g, ''));\r\n    checkMoneyError(e.target.value.replace(/[^0-9]/g, ''));\r\n  };\r\n\r\n  const checkMoneyError = (value: string) => {\r\n    if (value.length <= 0) {\r\n      setMoneyError('금액을 제대로 입력해주세요');\r\n    } else {\r\n      setMoneyError('');\r\n    }\r\n  };\r\n\r\n  const customInputStyle: CSSProperties = useMemo(() => {\r\n    return {\r\n      width: '100%',\r\n      height: '80px',\r\n      fontSize: fontPalette.font28,\r\n      padding: '20px',\r\n    };\r\n  }, []);\r\n\r\n  const onClickModalYes = () => {\r\n    sessionStorage.setItem('Bring', 'password');\r\n    pushPassword();\r\n  };\r\n\r\n  const onClickNext = () => {\r\n    if (money.length > 0 && moneyError === '') {\r\n      setOpenModal(true);\r\n    } else {\r\n      Toast.infoToast('금액을 입력해주세요');\r\n    }\r\n  };\r\n\r\n  const onClickComplete = () => {\r\n    sessionStorage.removeItem('Bring');\r\n    pushMain();\r\n  };\r\n\r\n  return {\r\n    money,\r\n    onClickNext,\r\n    customInputStyle,\r\n    checkStorage,\r\n    onClickNextAuth,\r\n    onChangePassword,\r\n    passwordError,\r\n    openModal,\r\n    onChangeMoney,\r\n    setOpenModal,\r\n    onClickModalYes,\r\n    moneyError,\r\n    onClickComplete,\r\n  };\r\n};\r\n\r\nexport default useBring;\r\n","import React, { useEffect } from 'react';\r\nimport { StyledButton, StyledTitle } from './BringMoney.style';\r\nimport AccountForm from 'components/Common/AccountForm';\r\nimport ModalPortal from 'components/Common/Modal/Portal';\r\nimport Modal from 'components/Common/Modal';\r\nimport useBring from 'hooks/Bring/useBring';\r\n\r\nconst BringMoney = (): JSX.Element => {\r\n  const {\r\n    onChangeMoney,\r\n    customInputStyle,\r\n    money,\r\n    onClickNext,\r\n    moneyError,\r\n    checkStorage,\r\n    openModal,\r\n    setOpenModal,\r\n    onClickModalYes,\r\n  } = useBring();\r\n\r\n  useEffect(() => {\r\n    checkStorage();\r\n  }, [checkStorage]);\r\n\r\n  return (\r\n    <>\r\n      <StyledTitle>가져오기</StyledTitle>\r\n      <AccountForm\r\n        title=\"금액 입력\"\r\n        value={money}\r\n        name=\"account\"\r\n        error={moneyError}\r\n        onChange={onChangeMoney}\r\n        placeholder=\"금액을 입력해주세요\"\r\n        maxLength={10}\r\n        balance=\"450,000\"\r\n        customInputStyle={customInputStyle}\r\n      />\r\n      <StyledButton onClick={onClickNext}>다음</StyledButton>\r\n      {openModal && (\r\n        <ModalPortal>\r\n          <Modal\r\n            title=\"신한은행\"\r\n            content=\"가져오시겠습니까?\"\r\n            handleNo={() => {\r\n              setOpenModal(false);\r\n            }}\r\n            handleYes={onClickModalYes}\r\n          />\r\n        </ModalPortal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BringMoney;\r\n","import PageTemplate from \"components/Common/Base/PageTemplate\"\r\nimport BringMoney from 'components/BringMoney';\r\n\r\nconst BringMoneyPage = ():JSX.Element => {\r\n  return (\r\n    <PageTemplate isHeader isFooter={false} isLogout={false}>\r\n      <BringMoney/>\r\n    </PageTemplate>\r\n  )\r\n}\r\n\r\nexport default BringMoneyPage;","import PageTemplate from 'components/Common/Base/PageTemplate';\r\nimport GetPassword from 'components/GetPassword';\r\nimport useBring from 'hooks/Bring/useBring';\r\n\r\nconst BringGetPasswordPage = (): JSX.Element => {\r\n  const { onChangePassword, passwordError, onClickNextAuth } = useBring();\r\n  return (\r\n    <PageTemplate isHeader isFooter={false} isLogout={false}>\r\n      <GetPassword\r\n        title=\"계좌비밀번호 입력\"\r\n        type=\"가져오기\"\r\n        onClick={onClickNextAuth}\r\n        error={passwordError}\r\n        onChange={onChangePassword}\r\n      />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default BringGetPasswordPage;\r\n","import PageTemplate from 'components/Common/Base/PageTemplate';\r\nimport Complete from 'components/Complete';\r\nimport useBring from 'hooks/Bring/useBring';\r\n\r\nconst BringCompletePage = (): JSX.Element => {\r\n  const { onClickComplete } = useBring();\r\n  return (\r\n    <PageTemplate isHeader isFooter={false} isLogout={false}>\r\n      <Complete\r\n        title=\"가져오기완료\"\r\n        type=\"가져오기\"\r\n        handleClick={onClickComplete}\r\n        bringAccount=\"001-01-1234567\"\r\n        bringMoney=\"10000\"\r\n      />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default BringCompletePage;\r\n","import LoginPage from 'pages/LoginPage';\r\nimport Token from 'lib/Token';\r\nimport { FC } from 'react';\r\nimport { Route } from 'react-router';\r\n\r\ninterface ICustonRouteProps {\r\n  path: string | string[];\r\n  component: FC;\r\n  exact?: boolean;\r\n}\r\n\r\nconst CustomRoute = ({\r\n  component,\r\n  path,\r\n  exact,\r\n}: ICustonRouteProps): JSX.Element => {\r\n  return (\r\n    <Route\r\n      exact={exact ? true : false}\r\n      path={path}\r\n      component={\r\n        Token.getToken('refresh-token', 'session') ? component : LoginPage\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomRoute;\r\n","import * as Pages from 'pages';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport CustomRoute from './Common/CustomRoute';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Pages.Welcome} />\r\n      <Route exact path=\"/register\" component={Pages.Register} />\r\n      <Route exact path=\"/login\" component={Pages.Login} />\r\n      <CustomRoute exact path=\"/main\" component={Pages.Main} />\r\n      <CustomRoute exact path=\"/profile\" component={Pages.Profile} />\r\n      <CustomRoute exact path=\"/service\" component={Pages.Main} />\r\n      <CustomRoute exact path=\"/password\" component={Pages.Password} />\r\n      <CustomRoute exact path=\"/detailcard\" component={Pages.DetailCard} />\r\n      <CustomRoute exact path=\"/notfound\" component={Pages.Notfound} />\r\n\r\n      <CustomRoute exact path=\"/add/info\" component={Pages.AddAccountGetInfo} />\r\n      <CustomRoute exact path=\"/add/card\" component={Pages.AddAccountSetCard} />\r\n\r\n      <CustomRoute\r\n        exact\r\n        path=\"/establish/password\"\r\n        component={Pages.EstablishAccountPassword}\r\n      />\r\n      <CustomRoute\r\n        exact\r\n        path=\"/establish/complete\"\r\n        component={Pages.EstablishAccountComplete}\r\n      />\r\n\r\n      <CustomRoute\r\n        exact\r\n        path=\"/remittance/getcard\"\r\n        component={Pages.RemittanceGetCard}\r\n      />\r\n      <CustomRoute\r\n        exact\r\n        path=\"/remittance/setcard\"\r\n        component={Pages.RemittanceSetCard}\r\n      />\r\n      <CustomRoute\r\n        exact\r\n        path=\"/remittance/confirm\"\r\n        component={Pages.RemittanceConfirm}\r\n      />\r\n      <CustomRoute\r\n        exact\r\n        path=\"/remittance/password\"\r\n        component={Pages.RemittanceGetPassword}\r\n      />\r\n      <CustomRoute\r\n        exact\r\n        path=\"/remittance/complete\"\r\n        component={Pages.RemittanceComplete}\r\n      />\r\n\r\n      <CustomRoute exact path=\"/bring/getcard\" component={Pages.BringGetCard} />\r\n      <CustomRoute exact path=\"/bring/money\" component={Pages.BringMoney} />\r\n      <CustomRoute\r\n        exact\r\n        path=\"/bring/password\"\r\n        component={Pages.BringGetPassword}\r\n      />\r\n      <CustomRoute\r\n        exact\r\n        path=\"/bring/complete\"\r\n        component={Pages.BringComplete}\r\n      />\r\n\r\n      <Redirect path=\"*\" to=\"/notfound\" />\r\n    </Switch>\r\n  );\r\n};\r\nexport default Routes;\r\n","import GlobalStyle from 'styles/globalStyle';\r\nimport { ITheme } from 'types/theme/theme.type';\r\nimport useTheme from 'hooks/Theme/useTheme';\r\nimport { Global, ThemeProvider } from '@emotion/react';\r\nimport Routes from 'components/Routes';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nconst ThemeProviderContainer = (): JSX.Element => {\r\n  const { theme }: { theme: ITheme } = useTheme();\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ToastContainer autoClose={5000} limit={9} />\r\n      <Global styles={GlobalStyle} />\r\n      <Routes />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default ThemeProviderContainer;\r\n","import 'styles/font.css';\r\nimport { RecoilRoot } from 'recoil';\r\nimport { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ThemeProviderContainer from 'ThemeProviderContainer';\r\n\r\nReactDOM.render(\r\n  <RecoilRoot>\r\n    <StrictMode>\r\n      <BrowserRouter>\r\n      {/* Suspense, Toast, ScrollTop */}\r\n        <ThemeProviderContainer />\r\n      </BrowserRouter>\r\n    </StrictMode>\r\n  </RecoilRoot>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}